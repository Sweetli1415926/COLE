{
  "version": 3,
  "sources": ["../../zrender/lib/svg/core.js", "../../zrender/lib/core/arrayDiff.js", "../../zrender/lib/svg/graphic.js", "../../zrender/lib/svg/helper/Definable.js", "../../zrender/lib/svg/helper/GradientManager.js", "../../zrender/lib/svg/helper/PatternManager.js", "../../zrender/lib/svg/helper/ClippathManager.js", "../../zrender/lib/svg/helper/ShadowManager.js", "../../zrender/lib/svg/Painter.js", "../../echarts/lib/renderer/installSVGRenderer.js", "../../zrender/lib/canvas/Layer.js", "../../zrender/lib/canvas/Painter.js", "../../echarts/lib/renderer/installCanvasRenderer.js"],
  "sourcesContent": ["export function createElement(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\n", "function diff(oldArr, newArr, equals) {\n    if (!equals) {\n        equals = function (a, b) {\n            return a === b;\n        };\n    }\n    oldArr = oldArr.slice();\n    newArr = newArr.slice();\n    var newLen = newArr.length;\n    var oldLen = oldArr.length;\n    var editLength = 1;\n    var maxEditLength = newLen + oldLen;\n    var bestPath = [{ newPos: -1, components: [] }];\n    var oldPos = extractCommon(bestPath[0], newArr, oldArr, 0, equals);\n    if (bestPath[0].newPos + 1 >= newLen && oldPos + 1 >= oldLen) {\n        var indices = [];\n        for (var i = 0; i < newArr.length; i++) {\n            indices.push(i);\n        }\n        return [{\n                indices: indices,\n                count: newArr.length,\n                added: false,\n                removed: false\n            }];\n    }\n    function execEditLength() {\n        for (var diagonalPath = -1 * editLength; diagonalPath <= editLength; diagonalPath += 2) {\n            var basePath;\n            var addPath = bestPath[diagonalPath - 1];\n            var removePath = bestPath[diagonalPath + 1];\n            var oldPos = (removePath ? removePath.newPos : 0) - diagonalPath;\n            if (addPath) {\n                bestPath[diagonalPath - 1] = undefined;\n            }\n            var canAdd = addPath && addPath.newPos + 1 < newLen;\n            var canRemove = removePath && 0 <= oldPos && oldPos < oldLen;\n            if (!canAdd && !canRemove) {\n                bestPath[diagonalPath] = undefined;\n                continue;\n            }\n            if (!canAdd || (canRemove && addPath.newPos < removePath.newPos)) {\n                basePath = clonePath(removePath);\n                pushComponent(basePath.components, false, true);\n            }\n            else {\n                basePath = addPath;\n                basePath.newPos++;\n                pushComponent(basePath.components, true, false);\n            }\n            oldPos = extractCommon(basePath, newArr, oldArr, diagonalPath, equals);\n            if (basePath.newPos + 1 >= newLen && oldPos + 1 >= oldLen) {\n                return buildValues(basePath.components);\n            }\n            else {\n                bestPath[diagonalPath] = basePath;\n            }\n        }\n        editLength++;\n    }\n    while (editLength <= maxEditLength) {\n        var ret = execEditLength();\n        if (ret) {\n            return ret;\n        }\n    }\n}\nfunction extractCommon(basePath, newArr, oldArr, diagonalPath, equals) {\n    var newLen = newArr.length;\n    var oldLen = oldArr.length;\n    var newPos = basePath.newPos;\n    var oldPos = newPos - diagonalPath;\n    var commonCount = 0;\n    while (newPos + 1 < newLen && oldPos + 1 < oldLen && equals(newArr[newPos + 1], oldArr[oldPos + 1])) {\n        newPos++;\n        oldPos++;\n        commonCount++;\n    }\n    if (commonCount) {\n        basePath.components.push({\n            count: commonCount,\n            added: false,\n            removed: false,\n            indices: []\n        });\n    }\n    basePath.newPos = newPos;\n    return oldPos;\n}\nfunction pushComponent(components, added, removed) {\n    var last = components[components.length - 1];\n    if (last && last.added === added && last.removed === removed) {\n        components[components.length - 1] = {\n            count: last.count + 1,\n            added: added,\n            removed: removed,\n            indices: []\n        };\n    }\n    else {\n        components.push({\n            count: 1,\n            added: added,\n            removed: removed,\n            indices: []\n        });\n    }\n}\nfunction buildValues(components) {\n    var componentPos = 0;\n    var componentLen = components.length;\n    var newPos = 0;\n    var oldPos = 0;\n    for (; componentPos < componentLen; componentPos++) {\n        var component = components[componentPos];\n        if (!component.removed) {\n            var indices = [];\n            for (var i = newPos; i < newPos + component.count; i++) {\n                indices.push(i);\n            }\n            component.indices = indices;\n            newPos += component.count;\n            if (!component.added) {\n                oldPos += component.count;\n            }\n        }\n        else {\n            for (var i = oldPos; i < oldPos + component.count; i++) {\n                component.indices.push(i);\n            }\n            oldPos += component.count;\n        }\n    }\n    return components;\n}\nfunction clonePath(path) {\n    return { newPos: path.newPos, components: path.components.slice(0) };\n}\nexport default function arrayDiff(oldArr, newArr, equal) {\n    return diff(oldArr, newArr, equal);\n}\n", "import { createElement } from './core';\nimport ZRImage from '../graphic/Image';\nimport { DEFAULT_FONT, getLineHeight } from '../contain/text';\nimport { map } from '../core/util';\nimport { normalizeLineDash } from '../graphic/helper/dashStyle';\nvar NONE = 'none';\nvar mathRound = Math.round;\nvar mathSin = Math.sin;\nvar mathCos = Math.cos;\nvar PI = Math.PI;\nvar PI2 = Math.PI * 2;\nvar degree = 180 / PI;\nvar EPSILON = 1e-4;\nfunction round3(val) {\n    return mathRound(val * 1e3) / 1e3;\n}\nfunction round4(val) {\n    return mathRound(val * 1e4) / 1e4;\n}\nfunction isAroundZero(val) {\n    return val < EPSILON && val > -EPSILON;\n}\nfunction pathHasFill(style) {\n    var fill = style.fill;\n    return fill != null && fill !== NONE;\n}\nfunction pathHasStroke(style) {\n    var stroke = style.stroke;\n    return stroke != null && stroke !== NONE;\n}\nfunction setTransform(svgEl, m) {\n    if (m) {\n        attr(svgEl, 'transform', 'matrix('\n            + round3(m[0]) + ','\n            + round3(m[1]) + ','\n            + round3(m[2]) + ','\n            + round3(m[3]) + ','\n            + round4(m[4]) + ','\n            + round4(m[5])\n            + ')');\n    }\n}\nfunction attr(el, key, val) {\n    if (!val || val.type !== 'linear' && val.type !== 'radial') {\n        el.setAttribute(key, val);\n    }\n}\nfunction attrXLink(el, key, val) {\n    el.setAttributeNS('http://www.w3.org/1999/xlink', key, val);\n}\nfunction attrXML(el, key, val) {\n    el.setAttributeNS('http://www.w3.org/XML/1998/namespace', key, val);\n}\nfunction bindStyle(svgEl, style, el) {\n    var opacity = style.opacity == null ? 1 : style.opacity;\n    if (el instanceof ZRImage) {\n        svgEl.style.opacity = opacity + '';\n        return;\n    }\n    if (pathHasFill(style)) {\n        var fill = style.fill;\n        fill = fill === 'transparent' ? NONE : fill;\n        attr(svgEl, 'fill', fill);\n        attr(svgEl, 'fill-opacity', (style.fillOpacity != null ? style.fillOpacity * opacity : opacity) + '');\n    }\n    else {\n        attr(svgEl, 'fill', NONE);\n    }\n    if (pathHasStroke(style)) {\n        var stroke = style.stroke;\n        stroke = stroke === 'transparent' ? NONE : stroke;\n        attr(svgEl, 'stroke', stroke);\n        var strokeWidth = style.lineWidth;\n        var strokeScale_1 = style.strokeNoScale\n            ? el.getLineScale()\n            : 1;\n        attr(svgEl, 'stroke-width', (strokeScale_1 ? strokeWidth / strokeScale_1 : 0) + '');\n        attr(svgEl, 'paint-order', style.strokeFirst ? 'stroke' : 'fill');\n        attr(svgEl, 'stroke-opacity', (style.strokeOpacity != null ? style.strokeOpacity * opacity : opacity) + '');\n        var lineDash = style.lineDash && strokeWidth > 0 && normalizeLineDash(style.lineDash, strokeWidth);\n        if (lineDash) {\n            var lineDashOffset = style.lineDashOffset;\n            if (strokeScale_1 && strokeScale_1 !== 1) {\n                lineDash = map(lineDash, function (rawVal) {\n                    return rawVal / strokeScale_1;\n                });\n                if (lineDashOffset) {\n                    lineDashOffset /= strokeScale_1;\n                    lineDashOffset = mathRound(lineDashOffset);\n                }\n            }\n            attr(svgEl, 'stroke-dasharray', lineDash.join(','));\n            attr(svgEl, 'stroke-dashoffset', (lineDashOffset || 0) + '');\n        }\n        else {\n            attr(svgEl, 'stroke-dasharray', '');\n        }\n        style.lineCap && attr(svgEl, 'stroke-linecap', style.lineCap);\n        style.lineJoin && attr(svgEl, 'stroke-linejoin', style.lineJoin);\n        style.miterLimit && attr(svgEl, 'stroke-miterlimit', style.miterLimit + '');\n    }\n    else {\n        attr(svgEl, 'stroke', NONE);\n    }\n}\nvar SVGPathRebuilder = (function () {\n    function SVGPathRebuilder() {\n    }\n    SVGPathRebuilder.prototype.reset = function () {\n        this._d = [];\n        this._str = '';\n    };\n    SVGPathRebuilder.prototype.moveTo = function (x, y) {\n        this._add('M', x, y);\n    };\n    SVGPathRebuilder.prototype.lineTo = function (x, y) {\n        this._add('L', x, y);\n    };\n    SVGPathRebuilder.prototype.bezierCurveTo = function (x, y, x2, y2, x3, y3) {\n        this._add('C', x, y, x2, y2, x3, y3);\n    };\n    SVGPathRebuilder.prototype.quadraticCurveTo = function (x, y, x2, y2) {\n        this._add('Q', x, y, x2, y2);\n    };\n    SVGPathRebuilder.prototype.arc = function (cx, cy, r, startAngle, endAngle, anticlockwise) {\n        this.ellipse(cx, cy, r, r, 0, startAngle, endAngle, anticlockwise);\n    };\n    SVGPathRebuilder.prototype.ellipse = function (cx, cy, rx, ry, psi, startAngle, endAngle, anticlockwise) {\n        var firstCmd = this._d.length === 0;\n        var dTheta = endAngle - startAngle;\n        var clockwise = !anticlockwise;\n        var dThetaPositive = Math.abs(dTheta);\n        var isCircle = isAroundZero(dThetaPositive - PI2)\n            || (clockwise ? dTheta >= PI2 : -dTheta >= PI2);\n        var unifiedTheta = dTheta > 0 ? dTheta % PI2 : (dTheta % PI2 + PI2);\n        var large = false;\n        if (isCircle) {\n            large = true;\n        }\n        else if (isAroundZero(dThetaPositive)) {\n            large = false;\n        }\n        else {\n            large = (unifiedTheta >= PI) === !!clockwise;\n        }\n        var x0 = round4(cx + rx * mathCos(startAngle));\n        var y0 = round4(cy + ry * mathSin(startAngle));\n        if (isCircle) {\n            if (clockwise) {\n                dTheta = PI2 - 1e-4;\n            }\n            else {\n                dTheta = -PI2 + 1e-4;\n            }\n            large = true;\n            if (firstCmd) {\n                this._d.push('M', x0, y0);\n            }\n        }\n        var x = round4(cx + rx * mathCos(startAngle + dTheta));\n        var y = round4(cy + ry * mathSin(startAngle + dTheta));\n        if (isNaN(x0) || isNaN(y0) || isNaN(rx) || isNaN(ry) || isNaN(psi) || isNaN(degree) || isNaN(x) || isNaN(y)) {\n            return '';\n        }\n        this._d.push('A', round4(rx), round4(ry), mathRound(psi * degree), +large, +clockwise, x, y);\n    };\n    SVGPathRebuilder.prototype.rect = function (x, y, w, h) {\n        this._add('M', x, y);\n        this._add('L', x + w, y);\n        this._add('L', x + w, y + h);\n        this._add('L', x, y + h);\n        this._add('L', x, y);\n    };\n    SVGPathRebuilder.prototype.closePath = function () {\n        if (this._d.length > 0) {\n            this._add('Z');\n        }\n    };\n    SVGPathRebuilder.prototype._add = function (cmd, a, b, c, d, e, f, g, h) {\n        this._d.push(cmd);\n        for (var i = 1; i < arguments.length; i++) {\n            var val = arguments[i];\n            if (isNaN(val)) {\n                this._invalid = true;\n                return;\n            }\n            this._d.push(round4(val));\n        }\n    };\n    SVGPathRebuilder.prototype.generateStr = function () {\n        this._str = this._invalid ? '' : this._d.join(' ');\n        this._d = [];\n    };\n    SVGPathRebuilder.prototype.getStr = function () {\n        return this._str;\n    };\n    return SVGPathRebuilder;\n}());\nvar svgPath = {\n    brush: function (el) {\n        var style = el.style;\n        var svgEl = el.__svgEl;\n        if (!svgEl) {\n            svgEl = createElement('path');\n            el.__svgEl = svgEl;\n        }\n        if (!el.path) {\n            el.createPathProxy();\n        }\n        var path = el.path;\n        if (el.shapeChanged()) {\n            path.beginPath();\n            el.buildPath(path, el.shape);\n            el.pathUpdated();\n        }\n        var pathVersion = path.getVersion();\n        var elExt = el;\n        var svgPathBuilder = elExt.__svgPathBuilder;\n        if (elExt.__svgPathVersion !== pathVersion || !svgPathBuilder || el.style.strokePercent < 1) {\n            if (!svgPathBuilder) {\n                svgPathBuilder = elExt.__svgPathBuilder = new SVGPathRebuilder();\n            }\n            svgPathBuilder.reset();\n            path.rebuildPath(svgPathBuilder, el.style.strokePercent);\n            svgPathBuilder.generateStr();\n            elExt.__svgPathVersion = pathVersion;\n        }\n        attr(svgEl, 'd', svgPathBuilder.getStr());\n        bindStyle(svgEl, style, el);\n        setTransform(svgEl, el.transform);\n    }\n};\nexport { svgPath as path };\nvar svgImage = {\n    brush: function (el) {\n        var style = el.style;\n        var image = style.image;\n        if (image instanceof HTMLImageElement) {\n            image = image.src;\n        }\n        else if (image instanceof HTMLCanvasElement) {\n            image = image.toDataURL();\n        }\n        if (!image) {\n            return;\n        }\n        var x = style.x || 0;\n        var y = style.y || 0;\n        var dw = style.width;\n        var dh = style.height;\n        var svgEl = el.__svgEl;\n        if (!svgEl) {\n            svgEl = createElement('image');\n            el.__svgEl = svgEl;\n        }\n        if (image !== el.__imageSrc) {\n            attrXLink(svgEl, 'href', image);\n            el.__imageSrc = image;\n        }\n        attr(svgEl, 'width', dw + '');\n        attr(svgEl, 'height', dh + '');\n        attr(svgEl, 'x', x + '');\n        attr(svgEl, 'y', y + '');\n        bindStyle(svgEl, style, el);\n        setTransform(svgEl, el.transform);\n    }\n};\nexport { svgImage as image };\nvar TEXT_ALIGN_TO_ANCHOR = {\n    left: 'start',\n    right: 'end',\n    center: 'middle',\n    middle: 'middle'\n};\nfunction adjustTextY(y, lineHeight, textBaseline) {\n    if (textBaseline === 'top') {\n        y += lineHeight / 2;\n    }\n    else if (textBaseline === 'bottom') {\n        y -= lineHeight / 2;\n    }\n    return y;\n}\nvar svgText = {\n    brush: function (el) {\n        var style = el.style;\n        var text = style.text;\n        text != null && (text += '');\n        if (!text || isNaN(style.x) || isNaN(style.y)) {\n            return;\n        }\n        var textSvgEl = el.__svgEl;\n        if (!textSvgEl) {\n            textSvgEl = createElement('text');\n            attrXML(textSvgEl, 'xml:space', 'preserve');\n            el.__svgEl = textSvgEl;\n        }\n        var font = style.font || DEFAULT_FONT;\n        var textSvgElStyle = textSvgEl.style;\n        textSvgElStyle.font = font;\n        textSvgEl.textContent = text;\n        bindStyle(textSvgEl, style, el);\n        setTransform(textSvgEl, el.transform);\n        var x = style.x || 0;\n        var y = adjustTextY(style.y || 0, getLineHeight(font), style.textBaseline);\n        var textAlign = TEXT_ALIGN_TO_ANCHOR[style.textAlign]\n            || style.textAlign;\n        attr(textSvgEl, 'dominant-baseline', 'central');\n        attr(textSvgEl, 'text-anchor', textAlign);\n        attr(textSvgEl, 'x', x + '');\n        attr(textSvgEl, 'y', y + '');\n    }\n};\nexport { svgText as text };\n", "import { createElement } from '../core';\nimport * as zrUtil from '../../core/util';\nimport Path from '../../graphic/Path';\nimport ZRImage from '../../graphic/Image';\nimport TSpan from '../../graphic/TSpan';\nimport { path as svgPath, image as svgImage, text as svgText } from '../graphic';\nvar MARK_UNUSED = '0';\nvar MARK_USED = '1';\nvar Definable = (function () {\n    function Definable(zrId, svgRoot, tagNames, markLabel, domName) {\n        this.nextId = 0;\n        this._domName = '_dom';\n        this.createElement = createElement;\n        this._zrId = zrId;\n        this._svgRoot = svgRoot;\n        this._tagNames = typeof tagNames === 'string' ? [tagNames] : tagNames;\n        this._markLabel = markLabel;\n        if (domName) {\n            this._domName = domName;\n        }\n    }\n    Definable.prototype.getDefs = function (isForceCreating) {\n        var svgRoot = this._svgRoot;\n        var defs = this._svgRoot.getElementsByTagName('defs');\n        if (defs.length === 0) {\n            if (isForceCreating) {\n                var defs_1 = svgRoot.insertBefore(this.createElement('defs'), svgRoot.firstChild);\n                if (!defs_1.contains) {\n                    defs_1.contains = function (el) {\n                        var children = defs_1.children;\n                        if (!children) {\n                            return false;\n                        }\n                        for (var i = children.length - 1; i >= 0; --i) {\n                            if (children[i] === el) {\n                                return true;\n                            }\n                        }\n                        return false;\n                    };\n                }\n                return defs_1;\n            }\n            else {\n                return null;\n            }\n        }\n        else {\n            return defs[0];\n        }\n    };\n    Definable.prototype.doUpdate = function (target, onUpdate) {\n        if (!target) {\n            return;\n        }\n        var defs = this.getDefs(false);\n        if (target[this._domName] && defs.contains(target[this._domName])) {\n            if (typeof onUpdate === 'function') {\n                onUpdate(target);\n            }\n        }\n        else {\n            var dom = this.add(target);\n            if (dom) {\n                target[this._domName] = dom;\n            }\n        }\n    };\n    Definable.prototype.add = function (target) {\n        return null;\n    };\n    Definable.prototype.addDom = function (dom) {\n        var defs = this.getDefs(true);\n        if (dom.parentNode !== defs) {\n            defs.appendChild(dom);\n        }\n    };\n    Definable.prototype.removeDom = function (target) {\n        var defs = this.getDefs(false);\n        if (defs && target[this._domName]) {\n            defs.removeChild(target[this._domName]);\n            target[this._domName] = null;\n        }\n    };\n    Definable.prototype.getDoms = function () {\n        var defs = this.getDefs(false);\n        if (!defs) {\n            return [];\n        }\n        var doms = [];\n        zrUtil.each(this._tagNames, function (tagName) {\n            var tags = defs.getElementsByTagName(tagName);\n            for (var i = 0; i < tags.length; i++) {\n                doms.push(tags[i]);\n            }\n        });\n        return doms;\n    };\n    Definable.prototype.markAllUnused = function () {\n        var doms = this.getDoms();\n        var that = this;\n        zrUtil.each(doms, function (dom) {\n            dom[that._markLabel] = MARK_UNUSED;\n        });\n    };\n    Definable.prototype.markDomUsed = function (dom) {\n        dom && (dom[this._markLabel] = MARK_USED);\n    };\n    ;\n    Definable.prototype.markDomUnused = function (dom) {\n        dom && (dom[this._markLabel] = MARK_UNUSED);\n    };\n    ;\n    Definable.prototype.isDomUnused = function (dom) {\n        return dom && dom[this._markLabel] !== MARK_USED;\n    };\n    Definable.prototype.removeUnused = function () {\n        var _this = this;\n        var defs = this.getDefs(false);\n        if (!defs) {\n            return;\n        }\n        var doms = this.getDoms();\n        zrUtil.each(doms, function (dom) {\n            if (_this.isDomUnused(dom)) {\n                defs.removeChild(dom);\n            }\n        });\n    };\n    Definable.prototype.getSvgProxy = function (displayable) {\n        if (displayable instanceof Path) {\n            return svgPath;\n        }\n        else if (displayable instanceof ZRImage) {\n            return svgImage;\n        }\n        else if (displayable instanceof TSpan) {\n            return svgText;\n        }\n        else {\n            return svgPath;\n        }\n    };\n    Definable.prototype.getSvgElement = function (displayable) {\n        return displayable.__svgEl;\n    };\n    return Definable;\n}());\nexport default Definable;\n", "import { __extends } from \"tslib\";\nimport Definable from './Definable';\nimport * as zrUtil from '../../core/util';\nimport * as colorTool from '../../tool/color';\nfunction isLinearGradient(value) {\n    return value.type === 'linear';\n}\nfunction isRadialGradient(value) {\n    return value.type === 'radial';\n}\nfunction isGradient(value) {\n    return value && (value.type === 'linear'\n        || value.type === 'radial');\n}\nvar GradientManager = (function (_super) {\n    __extends(GradientManager, _super);\n    function GradientManager(zrId, svgRoot) {\n        return _super.call(this, zrId, svgRoot, ['linearGradient', 'radialGradient'], '__gradient_in_use__') || this;\n    }\n    GradientManager.prototype.addWithoutUpdate = function (svgElement, displayable) {\n        if (displayable && displayable.style) {\n            var that_1 = this;\n            zrUtil.each(['fill', 'stroke'], function (fillOrStroke) {\n                var value = displayable.style[fillOrStroke];\n                if (isGradient(value)) {\n                    var gradient = value;\n                    var defs = that_1.getDefs(true);\n                    var dom = void 0;\n                    if (gradient.__dom) {\n                        dom = gradient.__dom;\n                        if (!defs.contains(gradient.__dom)) {\n                            that_1.addDom(dom);\n                        }\n                    }\n                    else {\n                        dom = that_1.add(gradient);\n                    }\n                    that_1.markUsed(displayable);\n                    var id = dom.getAttribute('id');\n                    svgElement.setAttribute(fillOrStroke, 'url(#' + id + ')');\n                }\n            });\n        }\n    };\n    GradientManager.prototype.add = function (gradient) {\n        var dom;\n        if (isLinearGradient(gradient)) {\n            dom = this.createElement('linearGradient');\n        }\n        else if (isRadialGradient(gradient)) {\n            dom = this.createElement('radialGradient');\n        }\n        else {\n            zrUtil.logError('Illegal gradient type.');\n            return null;\n        }\n        gradient.id = gradient.id || this.nextId++;\n        dom.setAttribute('id', 'zr' + this._zrId\n            + '-gradient-' + gradient.id);\n        this.updateDom(gradient, dom);\n        this.addDom(dom);\n        return dom;\n    };\n    GradientManager.prototype.update = function (gradient) {\n        if (!isGradient(gradient)) {\n            return;\n        }\n        var that = this;\n        this.doUpdate(gradient, function () {\n            var dom = gradient.__dom;\n            if (!dom) {\n                return;\n            }\n            var tagName = dom.tagName;\n            var type = gradient.type;\n            if (type === 'linear' && tagName === 'linearGradient'\n                || type === 'radial' && tagName === 'radialGradient') {\n                that.updateDom(gradient, gradient.__dom);\n            }\n            else {\n                that.removeDom(gradient);\n                that.add(gradient);\n            }\n        });\n    };\n    GradientManager.prototype.updateDom = function (gradient, dom) {\n        if (isLinearGradient(gradient)) {\n            dom.setAttribute('x1', gradient.x + '');\n            dom.setAttribute('y1', gradient.y + '');\n            dom.setAttribute('x2', gradient.x2 + '');\n            dom.setAttribute('y2', gradient.y2 + '');\n        }\n        else if (isRadialGradient(gradient)) {\n            dom.setAttribute('cx', gradient.x + '');\n            dom.setAttribute('cy', gradient.y + '');\n            dom.setAttribute('r', gradient.r + '');\n        }\n        else {\n            zrUtil.logError('Illegal gradient type.');\n            return;\n        }\n        if (gradient.global) {\n            dom.setAttribute('gradientUnits', 'userSpaceOnUse');\n        }\n        else {\n            dom.setAttribute('gradientUnits', 'objectBoundingBox');\n        }\n        dom.innerHTML = '';\n        var colors = gradient.colorStops;\n        for (var i = 0, len = colors.length; i < len; ++i) {\n            var stop_1 = this.createElement('stop');\n            stop_1.setAttribute('offset', colors[i].offset * 100 + '%');\n            var color = colors[i].color;\n            if (color.indexOf('rgba') > -1) {\n                var opacity = colorTool.parse(color)[3];\n                var hex = colorTool.toHex(color);\n                stop_1.setAttribute('stop-color', '#' + hex);\n                stop_1.setAttribute('stop-opacity', opacity + '');\n            }\n            else {\n                stop_1.setAttribute('stop-color', colors[i].color);\n            }\n            dom.appendChild(stop_1);\n        }\n        gradient.__dom = dom;\n    };\n    GradientManager.prototype.markUsed = function (displayable) {\n        if (displayable.style) {\n            var gradient = displayable.style.fill;\n            if (gradient && gradient.__dom) {\n                _super.prototype.markDomUsed.call(this, gradient.__dom);\n            }\n            gradient = displayable.style.stroke;\n            if (gradient && gradient.__dom) {\n                _super.prototype.markDomUsed.call(this, gradient.__dom);\n            }\n        }\n    };\n    return GradientManager;\n}(Definable));\nexport default GradientManager;\n", "import { __extends } from \"tslib\";\nimport Definable from './Definable';\nimport * as zrUtil from '../../core/util';\nimport { createOrUpdateImage } from '../../graphic/helper/image';\nimport WeakMap from '../../core/WeakMap';\nfunction isPattern(value) {\n    return value && (!!value.image || !!value.svgElement);\n}\nvar patternDomMap = new WeakMap();\nvar PatternManager = (function (_super) {\n    __extends(PatternManager, _super);\n    function PatternManager(zrId, svgRoot) {\n        return _super.call(this, zrId, svgRoot, ['pattern'], '__pattern_in_use__') || this;\n    }\n    PatternManager.prototype.addWithoutUpdate = function (svgElement, displayable) {\n        if (displayable && displayable.style) {\n            var that_1 = this;\n            zrUtil.each(['fill', 'stroke'], function (fillOrStroke) {\n                var pattern = displayable.style[fillOrStroke];\n                if (isPattern(pattern)) {\n                    var defs = that_1.getDefs(true);\n                    var dom = patternDomMap.get(pattern);\n                    if (dom) {\n                        if (!defs.contains(dom)) {\n                            that_1.addDom(dom);\n                        }\n                    }\n                    else {\n                        dom = that_1.add(pattern);\n                    }\n                    that_1.markUsed(displayable);\n                    var id = dom.getAttribute('id');\n                    svgElement.setAttribute(fillOrStroke, 'url(#' + id + ')');\n                }\n            });\n        }\n    };\n    PatternManager.prototype.add = function (pattern) {\n        if (!isPattern(pattern)) {\n            return;\n        }\n        var dom = this.createElement('pattern');\n        pattern.id = pattern.id == null ? this.nextId++ : pattern.id;\n        dom.setAttribute('id', 'zr' + this._zrId\n            + '-pattern-' + pattern.id);\n        dom.setAttribute('x', '0');\n        dom.setAttribute('y', '0');\n        dom.setAttribute('patternUnits', 'userSpaceOnUse');\n        this.updateDom(pattern, dom);\n        this.addDom(dom);\n        return dom;\n    };\n    PatternManager.prototype.update = function (pattern) {\n        if (!isPattern(pattern)) {\n            return;\n        }\n        var that = this;\n        this.doUpdate(pattern, function () {\n            var dom = patternDomMap.get(pattern);\n            that.updateDom(pattern, dom);\n        });\n    };\n    PatternManager.prototype.updateDom = function (pattern, patternDom) {\n        var svgElement = pattern.svgElement;\n        if (svgElement instanceof SVGElement) {\n            if (svgElement.parentNode !== patternDom) {\n                patternDom.innerHTML = '';\n                patternDom.appendChild(svgElement);\n                patternDom.setAttribute('width', pattern.svgWidth + '');\n                patternDom.setAttribute('height', pattern.svgHeight + '');\n            }\n        }\n        else {\n            var img = void 0;\n            var prevImage = patternDom.getElementsByTagName('image');\n            if (prevImage.length) {\n                if (pattern.image) {\n                    img = prevImage[0];\n                }\n                else {\n                    patternDom.removeChild(prevImage[0]);\n                    return;\n                }\n            }\n            else if (pattern.image) {\n                img = this.createElement('image');\n            }\n            if (img) {\n                var imageSrc = void 0;\n                var patternImage = pattern.image;\n                if (typeof patternImage === 'string') {\n                    imageSrc = patternImage;\n                }\n                else if (patternImage instanceof HTMLImageElement) {\n                    imageSrc = patternImage.src;\n                }\n                else if (patternImage instanceof HTMLCanvasElement) {\n                    imageSrc = patternImage.toDataURL();\n                }\n                if (imageSrc) {\n                    img.setAttribute('href', imageSrc);\n                    img.setAttribute('x', '0');\n                    img.setAttribute('y', '0');\n                    var hostEl = {\n                        dirty: function () { }\n                    };\n                    var createdImage = createOrUpdateImage(imageSrc, img, hostEl, function (img) {\n                        patternDom.setAttribute('width', img.width + '');\n                        patternDom.setAttribute('height', img.height + '');\n                    });\n                    if (createdImage && createdImage.width && createdImage.height) {\n                        patternDom.setAttribute('width', createdImage.width + '');\n                        patternDom.setAttribute('height', createdImage.height + '');\n                    }\n                    patternDom.appendChild(img);\n                }\n            }\n        }\n        var x = pattern.x || 0;\n        var y = pattern.y || 0;\n        var rotation = (pattern.rotation || 0) / Math.PI * 180;\n        var scaleX = pattern.scaleX || 1;\n        var scaleY = pattern.scaleY || 1;\n        var transform = \"translate(\" + x + \", \" + y + \") rotate(\" + rotation + \") scale(\" + scaleX + \", \" + scaleY + \")\";\n        patternDom.setAttribute('patternTransform', transform);\n        patternDomMap.set(pattern, patternDom);\n    };\n    PatternManager.prototype.markUsed = function (displayable) {\n        if (displayable.style) {\n            if (isPattern(displayable.style.fill)) {\n                _super.prototype.markDomUsed.call(this, patternDomMap.get(displayable.style.fill));\n            }\n            if (isPattern(displayable.style.stroke)) {\n                _super.prototype.markDomUsed.call(this, patternDomMap.get(displayable.style.stroke));\n            }\n        }\n    };\n    return PatternManager;\n}(Definable));\nexport default PatternManager;\n", "import { __extends } from \"tslib\";\nimport Definable from './Definable';\nimport * as zrUtil from '../../core/util';\nimport { isClipPathChanged } from '../../canvas/helper';\nfunction generateClipPathsKey(clipPaths) {\n    var key = [];\n    if (clipPaths) {\n        for (var i = 0; i < clipPaths.length; i++) {\n            var clipPath = clipPaths[i];\n            key.push(clipPath.id);\n        }\n    }\n    return key.join(',');\n}\nexport function hasClipPath(displayable) {\n    var clipPaths = displayable.__clipPaths;\n    return clipPaths && clipPaths.length > 0;\n}\nvar ClippathManager = (function (_super) {\n    __extends(ClippathManager, _super);\n    function ClippathManager(zrId, svgRoot) {\n        var _this = _super.call(this, zrId, svgRoot, 'clipPath', '__clippath_in_use__') || this;\n        _this._refGroups = {};\n        _this._keyDuplicateCount = {};\n        return _this;\n    }\n    ClippathManager.prototype.markAllUnused = function () {\n        _super.prototype.markAllUnused.call(this);\n        for (var key in this._refGroups) {\n            this.markDomUnused(this._refGroups[key]);\n        }\n        this._keyDuplicateCount = {};\n    };\n    ClippathManager.prototype._getClipPathGroup = function (displayable, prevDisplayable) {\n        if (!hasClipPath(displayable)) {\n            return;\n        }\n        var clipPaths = displayable.__clipPaths;\n        var keyDuplicateCount = this._keyDuplicateCount;\n        var clipPathKey = generateClipPathsKey(clipPaths);\n        if (isClipPathChanged(clipPaths, prevDisplayable && prevDisplayable.__clipPaths)) {\n            keyDuplicateCount[clipPathKey] = keyDuplicateCount[clipPathKey] || 0;\n            keyDuplicateCount[clipPathKey] && (clipPathKey += '-' + keyDuplicateCount[clipPathKey]);\n            keyDuplicateCount[clipPathKey]++;\n        }\n        return this._refGroups[clipPathKey]\n            || (this._refGroups[clipPathKey] = this.createElement('g'));\n    };\n    ClippathManager.prototype.update = function (displayable, prevDisplayable) {\n        var clipGroup = this._getClipPathGroup(displayable, prevDisplayable);\n        if (clipGroup) {\n            this.markDomUsed(clipGroup);\n            this.updateDom(clipGroup, displayable.__clipPaths);\n        }\n        return clipGroup;\n    };\n    ;\n    ClippathManager.prototype.updateDom = function (parentEl, clipPaths) {\n        if (clipPaths && clipPaths.length > 0) {\n            var defs = this.getDefs(true);\n            var clipPath = clipPaths[0];\n            var clipPathEl = void 0;\n            var id = void 0;\n            if (clipPath._dom) {\n                id = clipPath._dom.getAttribute('id');\n                clipPathEl = clipPath._dom;\n                if (!defs.contains(clipPathEl)) {\n                    defs.appendChild(clipPathEl);\n                }\n            }\n            else {\n                id = 'zr' + this._zrId + '-clip-' + this.nextId;\n                ++this.nextId;\n                clipPathEl = this.createElement('clipPath');\n                clipPathEl.setAttribute('id', id);\n                defs.appendChild(clipPathEl);\n                clipPath._dom = clipPathEl;\n            }\n            var svgProxy = this.getSvgProxy(clipPath);\n            svgProxy.brush(clipPath);\n            var pathEl = this.getSvgElement(clipPath);\n            clipPathEl.innerHTML = '';\n            clipPathEl.appendChild(pathEl);\n            parentEl.setAttribute('clip-path', 'url(#' + id + ')');\n            if (clipPaths.length > 1) {\n                this.updateDom(clipPathEl, clipPaths.slice(1));\n            }\n        }\n        else {\n            if (parentEl) {\n                parentEl.setAttribute('clip-path', 'none');\n            }\n        }\n    };\n    ;\n    ClippathManager.prototype.markUsed = function (displayable) {\n        var _this = this;\n        if (displayable.__clipPaths) {\n            zrUtil.each(displayable.__clipPaths, function (clipPath) {\n                if (clipPath._dom) {\n                    _super.prototype.markDomUsed.call(_this, clipPath._dom);\n                }\n            });\n        }\n    };\n    ;\n    ClippathManager.prototype.removeUnused = function () {\n        _super.prototype.removeUnused.call(this);\n        var newRefGroupsMap = {};\n        for (var key in this._refGroups) {\n            var group = this._refGroups[key];\n            if (!this.isDomUnused(group)) {\n                newRefGroupsMap[key] = group;\n            }\n            else if (group.parentNode) {\n                group.parentNode.removeChild(group);\n            }\n        }\n        this._refGroups = newRefGroupsMap;\n    };\n    return ClippathManager;\n}(Definable));\nexport default ClippathManager;\n", "import { __extends } from \"tslib\";\nimport Definable from './Definable';\nvar ShadowManager = (function (_super) {\n    __extends(ShadowManager, _super);\n    function ShadowManager(zrId, svgRoot) {\n        var _this = _super.call(this, zrId, svgRoot, ['filter'], '__filter_in_use__', '_shadowDom') || this;\n        _this._shadowDomMap = {};\n        _this._shadowDomPool = [];\n        return _this;\n    }\n    ShadowManager.prototype._getFromPool = function () {\n        var shadowDom = this._shadowDomPool.pop();\n        if (!shadowDom) {\n            shadowDom = this.createElement('filter');\n            shadowDom.setAttribute('id', 'zr' + this._zrId + '-shadow-' + this.nextId++);\n            var domChild = this.createElement('feDropShadow');\n            shadowDom.appendChild(domChild);\n            this.addDom(shadowDom);\n        }\n        return shadowDom;\n    };\n    ShadowManager.prototype.update = function (svgElement, displayable) {\n        var style = displayable.style;\n        if (hasShadow(style)) {\n            var shadowKey = getShadowKey(displayable);\n            var shadowDom = displayable._shadowDom = this._shadowDomMap[shadowKey];\n            if (!shadowDom) {\n                shadowDom = this._getFromPool();\n                this._shadowDomMap[shadowKey] = shadowDom;\n            }\n            this.updateDom(svgElement, displayable, shadowDom);\n        }\n        else {\n            this.remove(svgElement, displayable);\n        }\n    };\n    ShadowManager.prototype.remove = function (svgElement, displayable) {\n        if (displayable._shadowDom != null) {\n            displayable._shadowDom = null;\n            svgElement.style.filter = '';\n        }\n    };\n    ShadowManager.prototype.updateDom = function (svgElement, displayable, shadowDom) {\n        var domChild = shadowDom.children[0];\n        var style = displayable.style;\n        var globalScale = displayable.getGlobalScale();\n        var scaleX = globalScale[0];\n        var scaleY = globalScale[1];\n        if (!scaleX || !scaleY) {\n            return;\n        }\n        var offsetX = style.shadowOffsetX || 0;\n        var offsetY = style.shadowOffsetY || 0;\n        var blur = style.shadowBlur;\n        var color = style.shadowColor;\n        domChild.setAttribute('dx', offsetX / scaleX + '');\n        domChild.setAttribute('dy', offsetY / scaleY + '');\n        domChild.setAttribute('flood-color', color);\n        var stdDx = blur / 2 / scaleX;\n        var stdDy = blur / 2 / scaleY;\n        var stdDeviation = stdDx + ' ' + stdDy;\n        domChild.setAttribute('stdDeviation', stdDeviation);\n        shadowDom.setAttribute('x', '-100%');\n        shadowDom.setAttribute('y', '-100%');\n        shadowDom.setAttribute('width', '300%');\n        shadowDom.setAttribute('height', '300%');\n        displayable._shadowDom = shadowDom;\n        var id = shadowDom.getAttribute('id');\n        svgElement.style.filter = 'url(#' + id + ')';\n    };\n    ShadowManager.prototype.removeUnused = function () {\n        var defs = this.getDefs(false);\n        if (!defs) {\n            return;\n        }\n        var shadowDomsPool = this._shadowDomPool;\n        for (var key in this._shadowDomMap) {\n            var dom = this._shadowDomMap[key];\n            shadowDomsPool.push(dom);\n        }\n        this._shadowDomMap = {};\n    };\n    return ShadowManager;\n}(Definable));\nexport default ShadowManager;\nfunction hasShadow(style) {\n    return style\n        && (style.shadowBlur || style.shadowOffsetX || style.shadowOffsetY);\n}\nfunction getShadowKey(displayable) {\n    var style = displayable.style;\n    var globalScale = displayable.getGlobalScale();\n    return [\n        style.shadowColor,\n        (style.shadowBlur || 0).toFixed(2),\n        (style.shadowOffsetX || 0).toFixed(2),\n        (style.shadowOffsetY || 0).toFixed(2),\n        globalScale[0],\n        globalScale[1]\n    ].join(',');\n}\n", "import { createElement } from './core';\nimport * as util from '../core/util';\nimport Path from '../graphic/Path';\nimport ZRImage from '../graphic/Image';\nimport TSpan from '../graphic/TSpan';\nimport arrayDiff from '../core/arrayDiff';\nimport GradientManager from './helper/GradientManager';\nimport PatternManager from './helper/PatternManager';\nimport ClippathManager, { hasClipPath } from './helper/ClippathManager';\nimport ShadowManager from './helper/ShadowManager';\nimport { path as svgPath, image as svgImage, text as svgText } from './graphic';\nfunction parseInt10(val) {\n    return parseInt(val, 10);\n}\nfunction getSvgProxy(el) {\n    if (el instanceof Path) {\n        return svgPath;\n    }\n    else if (el instanceof ZRImage) {\n        return svgImage;\n    }\n    else if (el instanceof TSpan) {\n        return svgText;\n    }\n    else {\n        return svgPath;\n    }\n}\nfunction checkParentAvailable(parent, child) {\n    return child && parent && child.parentNode !== parent;\n}\nfunction insertAfter(parent, child, prevSibling) {\n    if (checkParentAvailable(parent, child) && prevSibling) {\n        var nextSibling = prevSibling.nextSibling;\n        nextSibling ? parent.insertBefore(child, nextSibling)\n            : parent.appendChild(child);\n    }\n}\nfunction prepend(parent, child) {\n    if (checkParentAvailable(parent, child)) {\n        var firstChild = parent.firstChild;\n        firstChild ? parent.insertBefore(child, firstChild)\n            : parent.appendChild(child);\n    }\n}\nfunction remove(parent, child) {\n    if (child && parent && child.parentNode === parent) {\n        parent.removeChild(child);\n    }\n}\nfunction removeFromMyParent(child) {\n    if (child && child.parentNode) {\n        child.parentNode.removeChild(child);\n    }\n}\nfunction getSvgElement(displayable) {\n    return displayable.__svgEl;\n}\nvar SVGPainter = (function () {\n    function SVGPainter(root, storage, opts, zrId) {\n        this.type = 'svg';\n        this.refreshHover = createMethodNotSupport('refreshHover');\n        this.pathToImage = createMethodNotSupport('pathToImage');\n        this.configLayer = createMethodNotSupport('configLayer');\n        this.root = root;\n        this.storage = storage;\n        this._opts = opts = util.extend({}, opts || {});\n        var svgDom = createElement('svg');\n        svgDom.setAttributeNS('http://www.w3.org/2000/xmlns/', 'xmlns', 'http://www.w3.org/2000/svg');\n        svgDom.setAttributeNS('http://www.w3.org/2000/xmlns/', 'xmlns:xlink', 'http://www.w3.org/1999/xlink');\n        svgDom.setAttribute('version', '1.1');\n        svgDom.setAttribute('baseProfile', 'full');\n        svgDom.style.cssText = 'user-select:none;position:absolute;left:0;top:0;';\n        var bgRoot = createElement('g');\n        svgDom.appendChild(bgRoot);\n        var svgRoot = createElement('g');\n        svgDom.appendChild(svgRoot);\n        this._gradientManager = new GradientManager(zrId, svgRoot);\n        this._patternManager = new PatternManager(zrId, svgRoot);\n        this._clipPathManager = new ClippathManager(zrId, svgRoot);\n        this._shadowManager = new ShadowManager(zrId, svgRoot);\n        var viewport = document.createElement('div');\n        viewport.style.cssText = 'overflow:hidden;position:relative';\n        this._svgDom = svgDom;\n        this._svgRoot = svgRoot;\n        this._backgroundRoot = bgRoot;\n        this._viewport = viewport;\n        root.appendChild(viewport);\n        viewport.appendChild(svgDom);\n        this.resize(opts.width, opts.height);\n        this._visibleList = [];\n    }\n    SVGPainter.prototype.getType = function () {\n        return 'svg';\n    };\n    SVGPainter.prototype.getViewportRoot = function () {\n        return this._viewport;\n    };\n    SVGPainter.prototype.getSvgDom = function () {\n        return this._svgDom;\n    };\n    SVGPainter.prototype.getSvgRoot = function () {\n        return this._svgRoot;\n    };\n    SVGPainter.prototype.getViewportRootOffset = function () {\n        var viewportRoot = this.getViewportRoot();\n        if (viewportRoot) {\n            return {\n                offsetLeft: viewportRoot.offsetLeft || 0,\n                offsetTop: viewportRoot.offsetTop || 0\n            };\n        }\n    };\n    SVGPainter.prototype.refresh = function () {\n        var list = this.storage.getDisplayList(true);\n        this._paintList(list);\n    };\n    SVGPainter.prototype.setBackgroundColor = function (backgroundColor) {\n        if (this._backgroundRoot && this._backgroundNode) {\n            this._backgroundRoot.removeChild(this._backgroundNode);\n        }\n        var bgNode = createElement('rect');\n        bgNode.setAttribute('width', this.getWidth());\n        bgNode.setAttribute('height', this.getHeight());\n        bgNode.setAttribute('x', 0);\n        bgNode.setAttribute('y', 0);\n        bgNode.setAttribute('id', 0);\n        bgNode.style.fill = backgroundColor;\n        this._backgroundRoot.appendChild(bgNode);\n        this._backgroundNode = bgNode;\n    };\n    SVGPainter.prototype.createSVGElement = function (tag) {\n        return createElement(tag);\n    };\n    SVGPainter.prototype.paintOne = function (el) {\n        var svgProxy = getSvgProxy(el);\n        svgProxy && svgProxy.brush(el);\n        return getSvgElement(el);\n    };\n    SVGPainter.prototype._paintList = function (list) {\n        var gradientManager = this._gradientManager;\n        var patternManager = this._patternManager;\n        var clipPathManager = this._clipPathManager;\n        var shadowManager = this._shadowManager;\n        gradientManager.markAllUnused();\n        patternManager.markAllUnused();\n        clipPathManager.markAllUnused();\n        shadowManager.markAllUnused();\n        var svgRoot = this._svgRoot;\n        var visibleList = this._visibleList;\n        var listLen = list.length;\n        var newVisibleList = [];\n        for (var i = 0; i < listLen; i++) {\n            var displayable = list[i];\n            var svgProxy = getSvgProxy(displayable);\n            var svgElement = getSvgElement(displayable);\n            if (!displayable.invisible) {\n                if (displayable.__dirty || !svgElement) {\n                    svgProxy && svgProxy.brush(displayable);\n                    svgElement = getSvgElement(displayable);\n                    if (svgElement && displayable.style) {\n                        gradientManager.update(displayable.style.fill);\n                        gradientManager.update(displayable.style.stroke);\n                        patternManager.update(displayable.style.fill);\n                        patternManager.update(displayable.style.stroke);\n                        shadowManager.update(svgElement, displayable);\n                    }\n                    displayable.__dirty = 0;\n                }\n                if (svgElement) {\n                    newVisibleList.push(displayable);\n                }\n            }\n        }\n        var diff = arrayDiff(visibleList, newVisibleList);\n        var prevSvgElement;\n        var topPrevSvgElement;\n        for (var i = 0; i < diff.length; i++) {\n            var item = diff[i];\n            if (item.removed) {\n                for (var k = 0; k < item.count; k++) {\n                    var displayable = visibleList[item.indices[k]];\n                    var svgElement = getSvgElement(displayable);\n                    hasClipPath(displayable) ? removeFromMyParent(svgElement)\n                        : remove(svgRoot, svgElement);\n                }\n            }\n        }\n        var prevDisplayable;\n        var currentClipGroup;\n        for (var i = 0; i < diff.length; i++) {\n            var item = diff[i];\n            if (item.removed) {\n                continue;\n            }\n            for (var k = 0; k < item.count; k++) {\n                var displayable = newVisibleList[item.indices[k]];\n                var clipGroup = clipPathManager.update(displayable, prevDisplayable);\n                if (clipGroup !== currentClipGroup) {\n                    prevSvgElement = topPrevSvgElement;\n                    if (clipGroup) {\n                        prevSvgElement ? insertAfter(svgRoot, clipGroup, prevSvgElement)\n                            : prepend(svgRoot, clipGroup);\n                        topPrevSvgElement = clipGroup;\n                        prevSvgElement = null;\n                    }\n                    currentClipGroup = clipGroup;\n                }\n                var svgElement = getSvgElement(displayable);\n                prevSvgElement\n                    ? insertAfter(currentClipGroup || svgRoot, svgElement, prevSvgElement)\n                    : prepend(currentClipGroup || svgRoot, svgElement);\n                prevSvgElement = svgElement || prevSvgElement;\n                if (!currentClipGroup) {\n                    topPrevSvgElement = prevSvgElement;\n                }\n                gradientManager.markUsed(displayable);\n                gradientManager.addWithoutUpdate(svgElement, displayable);\n                patternManager.markUsed(displayable);\n                patternManager.addWithoutUpdate(svgElement, displayable);\n                clipPathManager.markUsed(displayable);\n                prevDisplayable = displayable;\n            }\n        }\n        gradientManager.removeUnused();\n        patternManager.removeUnused();\n        clipPathManager.removeUnused();\n        shadowManager.removeUnused();\n        this._visibleList = newVisibleList;\n    };\n    SVGPainter.prototype.resize = function (width, height) {\n        var viewport = this._viewport;\n        viewport.style.display = 'none';\n        var opts = this._opts;\n        width != null && (opts.width = width);\n        height != null && (opts.height = height);\n        width = this._getSize(0);\n        height = this._getSize(1);\n        viewport.style.display = '';\n        if (this._width !== width || this._height !== height) {\n            this._width = width;\n            this._height = height;\n            var viewportStyle = viewport.style;\n            viewportStyle.width = width + 'px';\n            viewportStyle.height = height + 'px';\n            var svgRoot = this._svgDom;\n            svgRoot.setAttribute('width', width + '');\n            svgRoot.setAttribute('height', height + '');\n        }\n        if (this._backgroundNode) {\n            this._backgroundNode.setAttribute('width', width);\n            this._backgroundNode.setAttribute('height', height);\n        }\n    };\n    SVGPainter.prototype.getWidth = function () {\n        return this._width;\n    };\n    SVGPainter.prototype.getHeight = function () {\n        return this._height;\n    };\n    SVGPainter.prototype._getSize = function (whIdx) {\n        var opts = this._opts;\n        var wh = ['width', 'height'][whIdx];\n        var cwh = ['clientWidth', 'clientHeight'][whIdx];\n        var plt = ['paddingLeft', 'paddingTop'][whIdx];\n        var prb = ['paddingRight', 'paddingBottom'][whIdx];\n        if (opts[wh] != null && opts[wh] !== 'auto') {\n            return parseFloat(opts[wh]);\n        }\n        var root = this.root;\n        var stl = document.defaultView.getComputedStyle(root);\n        return ((root[cwh] || parseInt10(stl[wh]) || parseInt10(root.style[wh]))\n            - (parseInt10(stl[plt]) || 0)\n            - (parseInt10(stl[prb]) || 0)) | 0;\n    };\n    SVGPainter.prototype.dispose = function () {\n        this.root.innerHTML = '';\n        this._svgRoot\n            = this._backgroundRoot\n                = this._svgDom\n                    = this._backgroundNode\n                        = this._viewport\n                            = this.storage\n                                = null;\n    };\n    SVGPainter.prototype.clear = function () {\n        var viewportNode = this._viewport;\n        if (viewportNode && viewportNode.parentNode) {\n            viewportNode.parentNode.removeChild(viewportNode);\n        }\n    };\n    SVGPainter.prototype.toDataURL = function () {\n        this.refresh();\n        var svgDom = this._svgDom;\n        var outerHTML = svgDom.outerHTML\n            || (svgDom.parentNode && svgDom.parentNode).innerHTML;\n        var html = encodeURIComponent(outerHTML.replace(/></g, '>\\n\\r<'));\n        return 'data:image/svg+xml;charset=UTF-8,' + html;\n    };\n    return SVGPainter;\n}());\nfunction createMethodNotSupport(method) {\n    return function () {\n        util.logError('In SVG mode painter not support method \"' + method + '\"');\n    };\n}\nexport default SVGPainter;\n", "\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport SVGPainter from 'zrender/lib/svg/Painter';\nexport function install(registers) {\n  registers.registerPainter('svg', SVGPainter);\n}", "import { __extends } from \"tslib\";\nimport * as util from '../core/util';\nimport { devicePixelRatio } from '../config';\nimport Eventful from '../core/Eventful';\nimport { getCanvasGradient } from './helper';\nimport { createCanvasPattern } from './graphic';\nimport BoundingRect from '../core/BoundingRect';\nimport { REDARAW_BIT } from '../graphic/constants';\nfunction returnFalse() {\n    return false;\n}\nfunction createDom(id, painter, dpr) {\n    var newDom = util.createCanvas();\n    var width = painter.getWidth();\n    var height = painter.getHeight();\n    var newDomStyle = newDom.style;\n    if (newDomStyle) {\n        newDomStyle.position = 'absolute';\n        newDomStyle.left = '0';\n        newDomStyle.top = '0';\n        newDomStyle.width = width + 'px';\n        newDomStyle.height = height + 'px';\n        newDom.setAttribute('data-zr-dom-id', id);\n    }\n    newDom.width = width * dpr;\n    newDom.height = height * dpr;\n    return newDom;\n}\n;\nvar Layer = (function (_super) {\n    __extends(Layer, _super);\n    function Layer(id, painter, dpr) {\n        var _this = _super.call(this) || this;\n        _this.motionBlur = false;\n        _this.lastFrameAlpha = 0.7;\n        _this.dpr = 1;\n        _this.virtual = false;\n        _this.config = {};\n        _this.incremental = false;\n        _this.zlevel = 0;\n        _this.maxRepaintRectCount = 5;\n        _this.__dirty = true;\n        _this.__firstTimePaint = true;\n        _this.__used = false;\n        _this.__drawIndex = 0;\n        _this.__startIndex = 0;\n        _this.__endIndex = 0;\n        _this.__prevStartIndex = null;\n        _this.__prevEndIndex = null;\n        var dom;\n        dpr = dpr || devicePixelRatio;\n        if (typeof id === 'string') {\n            dom = createDom(id, painter, dpr);\n        }\n        else if (util.isObject(id)) {\n            dom = id;\n            id = dom.id;\n        }\n        _this.id = id;\n        _this.dom = dom;\n        var domStyle = dom.style;\n        if (domStyle) {\n            dom.onselectstart = returnFalse;\n            domStyle.webkitUserSelect = 'none';\n            domStyle.userSelect = 'none';\n            domStyle.webkitTapHighlightColor = 'rgba(0,0,0,0)';\n            domStyle['-webkit-touch-callout'] = 'none';\n            domStyle.padding = '0';\n            domStyle.margin = '0';\n            domStyle.borderWidth = '0';\n        }\n        _this.domBack = null;\n        _this.ctxBack = null;\n        _this.painter = painter;\n        _this.config = null;\n        _this.dpr = dpr;\n        return _this;\n    }\n    Layer.prototype.getElementCount = function () {\n        return this.__endIndex - this.__startIndex;\n    };\n    Layer.prototype.afterBrush = function () {\n        this.__prevStartIndex = this.__startIndex;\n        this.__prevEndIndex = this.__endIndex;\n    };\n    Layer.prototype.initContext = function () {\n        this.ctx = this.dom.getContext('2d');\n        this.ctx.dpr = this.dpr;\n    };\n    Layer.prototype.setUnpainted = function () {\n        this.__firstTimePaint = true;\n    };\n    Layer.prototype.createBackBuffer = function () {\n        var dpr = this.dpr;\n        this.domBack = createDom('back-' + this.id, this.painter, dpr);\n        this.ctxBack = this.domBack.getContext('2d');\n        if (dpr !== 1) {\n            this.ctxBack.scale(dpr, dpr);\n        }\n    };\n    Layer.prototype.createRepaintRects = function (displayList, prevList, viewWidth, viewHeight) {\n        if (this.__firstTimePaint) {\n            this.__firstTimePaint = false;\n            return null;\n        }\n        var mergedRepaintRects = [];\n        var maxRepaintRectCount = this.maxRepaintRectCount;\n        var full = false;\n        var pendingRect = new BoundingRect(0, 0, 0, 0);\n        function addRectToMergePool(rect) {\n            if (!rect.isFinite() || rect.isZero()) {\n                return;\n            }\n            if (mergedRepaintRects.length === 0) {\n                var boundingRect = new BoundingRect(0, 0, 0, 0);\n                boundingRect.copy(rect);\n                mergedRepaintRects.push(boundingRect);\n            }\n            else {\n                var isMerged = false;\n                var minDeltaArea = Infinity;\n                var bestRectToMergeIdx = 0;\n                for (var i = 0; i < mergedRepaintRects.length; ++i) {\n                    var mergedRect = mergedRepaintRects[i];\n                    if (mergedRect.intersect(rect)) {\n                        var pendingRect_1 = new BoundingRect(0, 0, 0, 0);\n                        pendingRect_1.copy(mergedRect);\n                        pendingRect_1.union(rect);\n                        mergedRepaintRects[i] = pendingRect_1;\n                        isMerged = true;\n                        break;\n                    }\n                    else if (full) {\n                        pendingRect.copy(rect);\n                        pendingRect.union(mergedRect);\n                        var aArea = rect.width * rect.height;\n                        var bArea = mergedRect.width * mergedRect.height;\n                        var pendingArea = pendingRect.width * pendingRect.height;\n                        var deltaArea = pendingArea - aArea - bArea;\n                        if (deltaArea < minDeltaArea) {\n                            minDeltaArea = deltaArea;\n                            bestRectToMergeIdx = i;\n                        }\n                    }\n                }\n                if (full) {\n                    mergedRepaintRects[bestRectToMergeIdx].union(rect);\n                    isMerged = true;\n                }\n                if (!isMerged) {\n                    var boundingRect = new BoundingRect(0, 0, 0, 0);\n                    boundingRect.copy(rect);\n                    mergedRepaintRects.push(boundingRect);\n                }\n                if (!full) {\n                    full = mergedRepaintRects.length >= maxRepaintRectCount;\n                }\n            }\n        }\n        for (var i = this.__startIndex; i < this.__endIndex; ++i) {\n            var el = displayList[i];\n            if (el) {\n                var shouldPaint = el.shouldBePainted(viewWidth, viewHeight, true, true);\n                var prevRect = el.__isRendered && ((el.__dirty & REDARAW_BIT) || !shouldPaint)\n                    ? el.getPrevPaintRect()\n                    : null;\n                if (prevRect) {\n                    addRectToMergePool(prevRect);\n                }\n                var curRect = shouldPaint && ((el.__dirty & REDARAW_BIT) || !el.__isRendered)\n                    ? el.getPaintRect()\n                    : null;\n                if (curRect) {\n                    addRectToMergePool(curRect);\n                }\n            }\n        }\n        for (var i = this.__prevStartIndex; i < this.__prevEndIndex; ++i) {\n            var el = prevList[i];\n            var shouldPaint = el.shouldBePainted(viewWidth, viewHeight, true, true);\n            if (el && (!shouldPaint || !el.__zr) && el.__isRendered) {\n                var prevRect = el.getPrevPaintRect();\n                if (prevRect) {\n                    addRectToMergePool(prevRect);\n                }\n            }\n        }\n        var hasIntersections;\n        do {\n            hasIntersections = false;\n            for (var i = 0; i < mergedRepaintRects.length;) {\n                if (mergedRepaintRects[i].isZero()) {\n                    mergedRepaintRects.splice(i, 1);\n                    continue;\n                }\n                for (var j = i + 1; j < mergedRepaintRects.length;) {\n                    if (mergedRepaintRects[i].intersect(mergedRepaintRects[j])) {\n                        hasIntersections = true;\n                        mergedRepaintRects[i].union(mergedRepaintRects[j]);\n                        mergedRepaintRects.splice(j, 1);\n                    }\n                    else {\n                        j++;\n                    }\n                }\n                i++;\n            }\n        } while (hasIntersections);\n        this._paintRects = mergedRepaintRects;\n        return mergedRepaintRects;\n    };\n    Layer.prototype.debugGetPaintRects = function () {\n        return (this._paintRects || []).slice();\n    };\n    Layer.prototype.resize = function (width, height) {\n        var dpr = this.dpr;\n        var dom = this.dom;\n        var domStyle = dom.style;\n        var domBack = this.domBack;\n        if (domStyle) {\n            domStyle.width = width + 'px';\n            domStyle.height = height + 'px';\n        }\n        dom.width = width * dpr;\n        dom.height = height * dpr;\n        if (domBack) {\n            domBack.width = width * dpr;\n            domBack.height = height * dpr;\n            if (dpr !== 1) {\n                this.ctxBack.scale(dpr, dpr);\n            }\n        }\n    };\n    Layer.prototype.clear = function (clearAll, clearColor, repaintRects) {\n        var dom = this.dom;\n        var ctx = this.ctx;\n        var width = dom.width;\n        var height = dom.height;\n        clearColor = clearColor || this.clearColor;\n        var haveMotionBLur = this.motionBlur && !clearAll;\n        var lastFrameAlpha = this.lastFrameAlpha;\n        var dpr = this.dpr;\n        var self = this;\n        if (haveMotionBLur) {\n            if (!this.domBack) {\n                this.createBackBuffer();\n            }\n            this.ctxBack.globalCompositeOperation = 'copy';\n            this.ctxBack.drawImage(dom, 0, 0, width / dpr, height / dpr);\n        }\n        var domBack = this.domBack;\n        function doClear(x, y, width, height) {\n            ctx.clearRect(x, y, width, height);\n            if (clearColor && clearColor !== 'transparent') {\n                var clearColorGradientOrPattern = void 0;\n                if (util.isGradientObject(clearColor)) {\n                    clearColorGradientOrPattern = clearColor.__canvasGradient\n                        || getCanvasGradient(ctx, clearColor, {\n                            x: 0,\n                            y: 0,\n                            width: width,\n                            height: height\n                        });\n                    clearColor.__canvasGradient = clearColorGradientOrPattern;\n                }\n                else if (util.isImagePatternObject(clearColor)) {\n                    clearColorGradientOrPattern = createCanvasPattern(ctx, clearColor, {\n                        dirty: function () {\n                            self.setUnpainted();\n                            self.__painter.refresh();\n                        }\n                    });\n                }\n                ctx.save();\n                ctx.fillStyle = clearColorGradientOrPattern || clearColor;\n                ctx.fillRect(x, y, width, height);\n                ctx.restore();\n            }\n            if (haveMotionBLur) {\n                ctx.save();\n                ctx.globalAlpha = lastFrameAlpha;\n                ctx.drawImage(domBack, x, y, width, height);\n                ctx.restore();\n            }\n        }\n        ;\n        if (!repaintRects || haveMotionBLur) {\n            doClear(0, 0, width, height);\n        }\n        else if (repaintRects.length) {\n            util.each(repaintRects, function (rect) {\n                doClear(rect.x * dpr, rect.y * dpr, rect.width * dpr, rect.height * dpr);\n            });\n        }\n    };\n    return Layer;\n}(Eventful));\nexport default Layer;\n", "import { devicePixelRatio } from '../config';\nimport * as util from '../core/util';\nimport Layer from './Layer';\nimport requestAnimationFrame from '../animation/requestAnimationFrame';\nimport ZRImage from '../graphic/Image';\nimport env from '../core/env';\nimport { brush, brushSingle } from './graphic';\nimport { REDARAW_BIT } from '../graphic/constants';\nvar HOVER_LAYER_ZLEVEL = 1e5;\nvar CANVAS_ZLEVEL = 314159;\nvar EL_AFTER_INCREMENTAL_INC = 0.01;\nvar INCREMENTAL_INC = 0.001;\nfunction parseInt10(val) {\n    return parseInt(val, 10);\n}\nfunction isLayerValid(layer) {\n    if (!layer) {\n        return false;\n    }\n    if (layer.__builtin__) {\n        return true;\n    }\n    if (typeof (layer.resize) !== 'function'\n        || typeof (layer.refresh) !== 'function') {\n        return false;\n    }\n    return true;\n}\nfunction createRoot(width, height) {\n    var domRoot = document.createElement('div');\n    domRoot.style.cssText = [\n        'position:relative',\n        'width:' + width + 'px',\n        'height:' + height + 'px',\n        'padding:0',\n        'margin:0',\n        'border-width:0'\n    ].join(';') + ';';\n    return domRoot;\n}\nvar CanvasPainter = (function () {\n    function CanvasPainter(root, storage, opts, id) {\n        this.type = 'canvas';\n        this._zlevelList = [];\n        this._prevDisplayList = [];\n        this._layers = {};\n        this._layerConfig = {};\n        this._needsManuallyCompositing = false;\n        this.type = 'canvas';\n        var singleCanvas = !root.nodeName\n            || root.nodeName.toUpperCase() === 'CANVAS';\n        this._opts = opts = util.extend({}, opts || {});\n        this.dpr = opts.devicePixelRatio || devicePixelRatio;\n        this._singleCanvas = singleCanvas;\n        this.root = root;\n        var rootStyle = root.style;\n        if (rootStyle) {\n            rootStyle.webkitTapHighlightColor = 'transparent';\n            rootStyle.webkitUserSelect = 'none';\n            rootStyle.userSelect = 'none';\n            rootStyle['-webkit-touch-callout'] = 'none';\n            root.innerHTML = '';\n        }\n        this.storage = storage;\n        var zlevelList = this._zlevelList;\n        this._prevDisplayList = [];\n        var layers = this._layers;\n        if (!singleCanvas) {\n            this._width = this._getSize(0);\n            this._height = this._getSize(1);\n            var domRoot = this._domRoot = createRoot(this._width, this._height);\n            root.appendChild(domRoot);\n        }\n        else {\n            var rootCanvas = root;\n            var width = rootCanvas.width;\n            var height = rootCanvas.height;\n            if (opts.width != null) {\n                width = opts.width;\n            }\n            if (opts.height != null) {\n                height = opts.height;\n            }\n            this.dpr = opts.devicePixelRatio || 1;\n            rootCanvas.width = width * this.dpr;\n            rootCanvas.height = height * this.dpr;\n            this._width = width;\n            this._height = height;\n            var mainLayer = new Layer(rootCanvas, this, this.dpr);\n            mainLayer.__builtin__ = true;\n            mainLayer.initContext();\n            layers[CANVAS_ZLEVEL] = mainLayer;\n            mainLayer.zlevel = CANVAS_ZLEVEL;\n            zlevelList.push(CANVAS_ZLEVEL);\n            this._domRoot = root;\n        }\n    }\n    CanvasPainter.prototype.getType = function () {\n        return 'canvas';\n    };\n    CanvasPainter.prototype.isSingleCanvas = function () {\n        return this._singleCanvas;\n    };\n    CanvasPainter.prototype.getViewportRoot = function () {\n        return this._domRoot;\n    };\n    CanvasPainter.prototype.getViewportRootOffset = function () {\n        var viewportRoot = this.getViewportRoot();\n        if (viewportRoot) {\n            return {\n                offsetLeft: viewportRoot.offsetLeft || 0,\n                offsetTop: viewportRoot.offsetTop || 0\n            };\n        }\n    };\n    CanvasPainter.prototype.refresh = function (paintAll) {\n        var list = this.storage.getDisplayList(true);\n        var prevList = this._prevDisplayList;\n        var zlevelList = this._zlevelList;\n        this._redrawId = Math.random();\n        this._paintList(list, prevList, paintAll, this._redrawId);\n        for (var i = 0; i < zlevelList.length; i++) {\n            var z = zlevelList[i];\n            var layer = this._layers[z];\n            if (!layer.__builtin__ && layer.refresh) {\n                var clearColor = i === 0 ? this._backgroundColor : null;\n                layer.refresh(clearColor);\n            }\n        }\n        if (this._opts.useDirtyRect) {\n            this._prevDisplayList = list.slice();\n        }\n        return this;\n    };\n    CanvasPainter.prototype.refreshHover = function () {\n        this._paintHoverList(this.storage.getDisplayList(false));\n    };\n    CanvasPainter.prototype._paintHoverList = function (list) {\n        var len = list.length;\n        var hoverLayer = this._hoverlayer;\n        hoverLayer && hoverLayer.clear();\n        if (!len) {\n            return;\n        }\n        var scope = {\n            inHover: true,\n            viewWidth: this._width,\n            viewHeight: this._height\n        };\n        var ctx;\n        for (var i = 0; i < len; i++) {\n            var el = list[i];\n            if (el.__inHover) {\n                if (!hoverLayer) {\n                    hoverLayer = this._hoverlayer = this.getLayer(HOVER_LAYER_ZLEVEL);\n                }\n                if (!ctx) {\n                    ctx = hoverLayer.ctx;\n                    ctx.save();\n                }\n                brush(ctx, el, scope, i === len - 1);\n            }\n        }\n        if (ctx) {\n            ctx.restore();\n        }\n    };\n    CanvasPainter.prototype.getHoverLayer = function () {\n        return this.getLayer(HOVER_LAYER_ZLEVEL);\n    };\n    CanvasPainter.prototype.paintOne = function (ctx, el) {\n        brushSingle(ctx, el);\n    };\n    CanvasPainter.prototype._paintList = function (list, prevList, paintAll, redrawId) {\n        if (this._redrawId !== redrawId) {\n            return;\n        }\n        paintAll = paintAll || false;\n        this._updateLayerStatus(list);\n        var _a = this._doPaintList(list, prevList, paintAll), finished = _a.finished, needsRefreshHover = _a.needsRefreshHover;\n        if (this._needsManuallyCompositing) {\n            this._compositeManually();\n        }\n        if (needsRefreshHover) {\n            this._paintHoverList(list);\n        }\n        if (!finished) {\n            var self_1 = this;\n            requestAnimationFrame(function () {\n                self_1._paintList(list, prevList, paintAll, redrawId);\n            });\n        }\n        else {\n            this.eachLayer(function (layer) {\n                layer.afterBrush && layer.afterBrush();\n            });\n        }\n    };\n    CanvasPainter.prototype._compositeManually = function () {\n        var ctx = this.getLayer(CANVAS_ZLEVEL).ctx;\n        var width = this._domRoot.width;\n        var height = this._domRoot.height;\n        ctx.clearRect(0, 0, width, height);\n        this.eachBuiltinLayer(function (layer) {\n            if (layer.virtual) {\n                ctx.drawImage(layer.dom, 0, 0, width, height);\n            }\n        });\n    };\n    CanvasPainter.prototype._doPaintList = function (list, prevList, paintAll) {\n        var _this = this;\n        var layerList = [];\n        var useDirtyRect = this._opts.useDirtyRect;\n        for (var zi = 0; zi < this._zlevelList.length; zi++) {\n            var zlevel = this._zlevelList[zi];\n            var layer = this._layers[zlevel];\n            if (layer.__builtin__\n                && layer !== this._hoverlayer\n                && (layer.__dirty || paintAll)) {\n                layerList.push(layer);\n            }\n        }\n        var finished = true;\n        var needsRefreshHover = false;\n        var _loop_1 = function (k) {\n            var layer = layerList[k];\n            var ctx = layer.ctx;\n            var repaintRects = useDirtyRect\n                && layer.createRepaintRects(list, prevList, this_1._width, this_1._height);\n            var start = paintAll ? layer.__startIndex : layer.__drawIndex;\n            var useTimer = !paintAll && layer.incremental && Date.now;\n            var startTime = useTimer && Date.now();\n            var clearColor = layer.zlevel === this_1._zlevelList[0]\n                ? this_1._backgroundColor : null;\n            if (layer.__startIndex === layer.__endIndex) {\n                layer.clear(false, clearColor, repaintRects);\n            }\n            else if (start === layer.__startIndex) {\n                var firstEl = list[start];\n                if (!firstEl.incremental || !firstEl.notClear || paintAll) {\n                    layer.clear(false, clearColor, repaintRects);\n                }\n            }\n            if (start === -1) {\n                console.error('For some unknown reason. drawIndex is -1');\n                start = layer.__startIndex;\n            }\n            var i;\n            var repaint = function (repaintRect) {\n                var scope = {\n                    inHover: false,\n                    allClipped: false,\n                    prevEl: null,\n                    viewWidth: _this._width,\n                    viewHeight: _this._height\n                };\n                for (i = start; i < layer.__endIndex; i++) {\n                    var el = list[i];\n                    if (el.__inHover) {\n                        needsRefreshHover = true;\n                    }\n                    _this._doPaintEl(el, layer, useDirtyRect, repaintRect, scope, i === layer.__endIndex - 1);\n                    if (useTimer) {\n                        var dTime = Date.now() - startTime;\n                        if (dTime > 15) {\n                            break;\n                        }\n                    }\n                }\n                if (scope.prevElClipPaths) {\n                    ctx.restore();\n                }\n            };\n            if (repaintRects) {\n                if (repaintRects.length === 0) {\n                    i = layer.__endIndex;\n                }\n                else {\n                    var dpr = this_1.dpr;\n                    for (var r = 0; r < repaintRects.length; ++r) {\n                        var rect = repaintRects[r];\n                        ctx.save();\n                        ctx.beginPath();\n                        ctx.rect(rect.x * dpr, rect.y * dpr, rect.width * dpr, rect.height * dpr);\n                        ctx.clip();\n                        repaint(rect);\n                        ctx.restore();\n                    }\n                }\n            }\n            else {\n                ctx.save();\n                repaint();\n                ctx.restore();\n            }\n            layer.__drawIndex = i;\n            if (layer.__drawIndex < layer.__endIndex) {\n                finished = false;\n            }\n        };\n        var this_1 = this;\n        for (var k = 0; k < layerList.length; k++) {\n            _loop_1(k);\n        }\n        if (env.wxa) {\n            util.each(this._layers, function (layer) {\n                if (layer && layer.ctx && layer.ctx.draw) {\n                    layer.ctx.draw();\n                }\n            });\n        }\n        return {\n            finished: finished,\n            needsRefreshHover: needsRefreshHover\n        };\n    };\n    CanvasPainter.prototype._doPaintEl = function (el, currentLayer, useDirtyRect, repaintRect, scope, isLast) {\n        var ctx = currentLayer.ctx;\n        if (useDirtyRect) {\n            var paintRect = el.getPaintRect();\n            if (!repaintRect || paintRect && paintRect.intersect(repaintRect)) {\n                brush(ctx, el, scope, isLast);\n                el.setPrevPaintRect(paintRect);\n            }\n        }\n        else {\n            brush(ctx, el, scope, isLast);\n        }\n    };\n    CanvasPainter.prototype.getLayer = function (zlevel, virtual) {\n        if (this._singleCanvas && !this._needsManuallyCompositing) {\n            zlevel = CANVAS_ZLEVEL;\n        }\n        var layer = this._layers[zlevel];\n        if (!layer) {\n            layer = new Layer('zr_' + zlevel, this, this.dpr);\n            layer.zlevel = zlevel;\n            layer.__builtin__ = true;\n            if (this._layerConfig[zlevel]) {\n                util.merge(layer, this._layerConfig[zlevel], true);\n            }\n            else if (this._layerConfig[zlevel - EL_AFTER_INCREMENTAL_INC]) {\n                util.merge(layer, this._layerConfig[zlevel - EL_AFTER_INCREMENTAL_INC], true);\n            }\n            if (virtual) {\n                layer.virtual = virtual;\n            }\n            this.insertLayer(zlevel, layer);\n            layer.initContext();\n        }\n        return layer;\n    };\n    CanvasPainter.prototype.insertLayer = function (zlevel, layer) {\n        var layersMap = this._layers;\n        var zlevelList = this._zlevelList;\n        var len = zlevelList.length;\n        var domRoot = this._domRoot;\n        var prevLayer = null;\n        var i = -1;\n        if (layersMap[zlevel]) {\n            util.logError('ZLevel ' + zlevel + ' has been used already');\n            return;\n        }\n        if (!isLayerValid(layer)) {\n            util.logError('Layer of zlevel ' + zlevel + ' is not valid');\n            return;\n        }\n        if (len > 0 && zlevel > zlevelList[0]) {\n            for (i = 0; i < len - 1; i++) {\n                if (zlevelList[i] < zlevel\n                    && zlevelList[i + 1] > zlevel) {\n                    break;\n                }\n            }\n            prevLayer = layersMap[zlevelList[i]];\n        }\n        zlevelList.splice(i + 1, 0, zlevel);\n        layersMap[zlevel] = layer;\n        if (!layer.virtual) {\n            if (prevLayer) {\n                var prevDom = prevLayer.dom;\n                if (prevDom.nextSibling) {\n                    domRoot.insertBefore(layer.dom, prevDom.nextSibling);\n                }\n                else {\n                    domRoot.appendChild(layer.dom);\n                }\n            }\n            else {\n                if (domRoot.firstChild) {\n                    domRoot.insertBefore(layer.dom, domRoot.firstChild);\n                }\n                else {\n                    domRoot.appendChild(layer.dom);\n                }\n            }\n        }\n        layer.__painter = this;\n    };\n    CanvasPainter.prototype.eachLayer = function (cb, context) {\n        var zlevelList = this._zlevelList;\n        for (var i = 0; i < zlevelList.length; i++) {\n            var z = zlevelList[i];\n            cb.call(context, this._layers[z], z);\n        }\n    };\n    CanvasPainter.prototype.eachBuiltinLayer = function (cb, context) {\n        var zlevelList = this._zlevelList;\n        for (var i = 0; i < zlevelList.length; i++) {\n            var z = zlevelList[i];\n            var layer = this._layers[z];\n            if (layer.__builtin__) {\n                cb.call(context, layer, z);\n            }\n        }\n    };\n    CanvasPainter.prototype.eachOtherLayer = function (cb, context) {\n        var zlevelList = this._zlevelList;\n        for (var i = 0; i < zlevelList.length; i++) {\n            var z = zlevelList[i];\n            var layer = this._layers[z];\n            if (!layer.__builtin__) {\n                cb.call(context, layer, z);\n            }\n        }\n    };\n    CanvasPainter.prototype.getLayers = function () {\n        return this._layers;\n    };\n    CanvasPainter.prototype._updateLayerStatus = function (list) {\n        this.eachBuiltinLayer(function (layer, z) {\n            layer.__dirty = layer.__used = false;\n        });\n        function updatePrevLayer(idx) {\n            if (prevLayer) {\n                if (prevLayer.__endIndex !== idx) {\n                    prevLayer.__dirty = true;\n                }\n                prevLayer.__endIndex = idx;\n            }\n        }\n        if (this._singleCanvas) {\n            for (var i_1 = 1; i_1 < list.length; i_1++) {\n                var el = list[i_1];\n                if (el.zlevel !== list[i_1 - 1].zlevel || el.incremental) {\n                    this._needsManuallyCompositing = true;\n                    break;\n                }\n            }\n        }\n        var prevLayer = null;\n        var incrementalLayerCount = 0;\n        var prevZlevel;\n        var i;\n        for (i = 0; i < list.length; i++) {\n            var el = list[i];\n            var zlevel = el.zlevel;\n            var layer = void 0;\n            if (prevZlevel !== zlevel) {\n                prevZlevel = zlevel;\n                incrementalLayerCount = 0;\n            }\n            if (el.incremental) {\n                layer = this.getLayer(zlevel + INCREMENTAL_INC, this._needsManuallyCompositing);\n                layer.incremental = true;\n                incrementalLayerCount = 1;\n            }\n            else {\n                layer = this.getLayer(zlevel + (incrementalLayerCount > 0 ? EL_AFTER_INCREMENTAL_INC : 0), this._needsManuallyCompositing);\n            }\n            if (!layer.__builtin__) {\n                util.logError('ZLevel ' + zlevel + ' has been used by unkown layer ' + layer.id);\n            }\n            if (layer !== prevLayer) {\n                layer.__used = true;\n                if (layer.__startIndex !== i) {\n                    layer.__dirty = true;\n                }\n                layer.__startIndex = i;\n                if (!layer.incremental) {\n                    layer.__drawIndex = i;\n                }\n                else {\n                    layer.__drawIndex = -1;\n                }\n                updatePrevLayer(i);\n                prevLayer = layer;\n            }\n            if ((el.__dirty & REDARAW_BIT) && !el.__inHover) {\n                layer.__dirty = true;\n                if (layer.incremental && layer.__drawIndex < 0) {\n                    layer.__drawIndex = i;\n                }\n            }\n        }\n        updatePrevLayer(i);\n        this.eachBuiltinLayer(function (layer, z) {\n            if (!layer.__used && layer.getElementCount() > 0) {\n                layer.__dirty = true;\n                layer.__startIndex = layer.__endIndex = layer.__drawIndex = 0;\n            }\n            if (layer.__dirty && layer.__drawIndex < 0) {\n                layer.__drawIndex = layer.__startIndex;\n            }\n        });\n    };\n    CanvasPainter.prototype.clear = function () {\n        this.eachBuiltinLayer(this._clearLayer);\n        return this;\n    };\n    CanvasPainter.prototype._clearLayer = function (layer) {\n        layer.clear();\n    };\n    CanvasPainter.prototype.setBackgroundColor = function (backgroundColor) {\n        this._backgroundColor = backgroundColor;\n        util.each(this._layers, function (layer) {\n            layer.setUnpainted();\n        });\n    };\n    CanvasPainter.prototype.configLayer = function (zlevel, config) {\n        if (config) {\n            var layerConfig = this._layerConfig;\n            if (!layerConfig[zlevel]) {\n                layerConfig[zlevel] = config;\n            }\n            else {\n                util.merge(layerConfig[zlevel], config, true);\n            }\n            for (var i = 0; i < this._zlevelList.length; i++) {\n                var _zlevel = this._zlevelList[i];\n                if (_zlevel === zlevel || _zlevel === zlevel + EL_AFTER_INCREMENTAL_INC) {\n                    var layer = this._layers[_zlevel];\n                    util.merge(layer, layerConfig[zlevel], true);\n                }\n            }\n        }\n    };\n    CanvasPainter.prototype.delLayer = function (zlevel) {\n        var layers = this._layers;\n        var zlevelList = this._zlevelList;\n        var layer = layers[zlevel];\n        if (!layer) {\n            return;\n        }\n        layer.dom.parentNode.removeChild(layer.dom);\n        delete layers[zlevel];\n        zlevelList.splice(util.indexOf(zlevelList, zlevel), 1);\n    };\n    CanvasPainter.prototype.resize = function (width, height) {\n        if (!this._domRoot.style) {\n            if (width == null || height == null) {\n                return;\n            }\n            this._width = width;\n            this._height = height;\n            this.getLayer(CANVAS_ZLEVEL).resize(width, height);\n        }\n        else {\n            var domRoot = this._domRoot;\n            domRoot.style.display = 'none';\n            var opts = this._opts;\n            width != null && (opts.width = width);\n            height != null && (opts.height = height);\n            width = this._getSize(0);\n            height = this._getSize(1);\n            domRoot.style.display = '';\n            if (this._width !== width || height !== this._height) {\n                domRoot.style.width = width + 'px';\n                domRoot.style.height = height + 'px';\n                for (var id in this._layers) {\n                    if (this._layers.hasOwnProperty(id)) {\n                        this._layers[id].resize(width, height);\n                    }\n                }\n                this.refresh(true);\n            }\n            this._width = width;\n            this._height = height;\n        }\n        return this;\n    };\n    CanvasPainter.prototype.clearLayer = function (zlevel) {\n        var layer = this._layers[zlevel];\n        if (layer) {\n            layer.clear();\n        }\n    };\n    CanvasPainter.prototype.dispose = function () {\n        this.root.innerHTML = '';\n        this.root =\n            this.storage =\n                this._domRoot =\n                    this._layers = null;\n    };\n    CanvasPainter.prototype.getRenderedCanvas = function (opts) {\n        opts = opts || {};\n        if (this._singleCanvas && !this._compositeManually) {\n            return this._layers[CANVAS_ZLEVEL].dom;\n        }\n        var imageLayer = new Layer('image', this, opts.pixelRatio || this.dpr);\n        imageLayer.initContext();\n        imageLayer.clear(false, opts.backgroundColor || this._backgroundColor);\n        var ctx = imageLayer.ctx;\n        if (opts.pixelRatio <= this.dpr) {\n            this.refresh();\n            var width_1 = imageLayer.dom.width;\n            var height_1 = imageLayer.dom.height;\n            this.eachLayer(function (layer) {\n                if (layer.__builtin__) {\n                    ctx.drawImage(layer.dom, 0, 0, width_1, height_1);\n                }\n                else if (layer.renderToCanvas) {\n                    ctx.save();\n                    layer.renderToCanvas(ctx);\n                    ctx.restore();\n                }\n            });\n        }\n        else {\n            var scope = {\n                inHover: false,\n                viewWidth: this._width,\n                viewHeight: this._height\n            };\n            var displayList = this.storage.getDisplayList(true);\n            for (var i = 0, len = displayList.length; i < len; i++) {\n                var el = displayList[i];\n                brush(ctx, el, scope, i === len - 1);\n            }\n        }\n        return imageLayer.dom;\n    };\n    CanvasPainter.prototype.getWidth = function () {\n        return this._width;\n    };\n    CanvasPainter.prototype.getHeight = function () {\n        return this._height;\n    };\n    CanvasPainter.prototype._getSize = function (whIdx) {\n        var opts = this._opts;\n        var wh = ['width', 'height'][whIdx];\n        var cwh = ['clientWidth', 'clientHeight'][whIdx];\n        var plt = ['paddingLeft', 'paddingTop'][whIdx];\n        var prb = ['paddingRight', 'paddingBottom'][whIdx];\n        if (opts[wh] != null && opts[wh] !== 'auto') {\n            return parseFloat(opts[wh]);\n        }\n        var root = this.root;\n        var stl = document.defaultView.getComputedStyle(root);\n        return ((root[cwh] || parseInt10(stl[wh]) || parseInt10(root.style[wh]))\n            - (parseInt10(stl[plt]) || 0)\n            - (parseInt10(stl[prb]) || 0)) | 0;\n    };\n    CanvasPainter.prototype.pathToImage = function (path, dpr) {\n        dpr = dpr || this.dpr;\n        var canvas = document.createElement('canvas');\n        var ctx = canvas.getContext('2d');\n        var rect = path.getBoundingRect();\n        var style = path.style;\n        var shadowBlurSize = style.shadowBlur * dpr;\n        var shadowOffsetX = style.shadowOffsetX * dpr;\n        var shadowOffsetY = style.shadowOffsetY * dpr;\n        var lineWidth = path.hasStroke() ? style.lineWidth : 0;\n        var leftMargin = Math.max(lineWidth / 2, -shadowOffsetX + shadowBlurSize);\n        var rightMargin = Math.max(lineWidth / 2, shadowOffsetX + shadowBlurSize);\n        var topMargin = Math.max(lineWidth / 2, -shadowOffsetY + shadowBlurSize);\n        var bottomMargin = Math.max(lineWidth / 2, shadowOffsetY + shadowBlurSize);\n        var width = rect.width + leftMargin + rightMargin;\n        var height = rect.height + topMargin + bottomMargin;\n        canvas.width = width * dpr;\n        canvas.height = height * dpr;\n        ctx.scale(dpr, dpr);\n        ctx.clearRect(0, 0, width, height);\n        ctx.dpr = dpr;\n        var pathTransform = {\n            x: path.x,\n            y: path.y,\n            scaleX: path.scaleX,\n            scaleY: path.scaleY,\n            rotation: path.rotation,\n            originX: path.originX,\n            originY: path.originY\n        };\n        path.x = leftMargin - rect.x;\n        path.y = topMargin - rect.y;\n        path.rotation = 0;\n        path.scaleX = 1;\n        path.scaleY = 1;\n        path.updateTransform();\n        if (path) {\n            brush(ctx, path, {\n                inHover: false,\n                viewWidth: this._width,\n                viewHeight: this._height\n            }, true);\n        }\n        var imgShape = new ZRImage({\n            style: {\n                x: 0,\n                y: 0,\n                image: canvas\n            }\n        });\n        util.extend(path, pathTransform);\n        return imgShape;\n    };\n    return CanvasPainter;\n}());\nexport default CanvasPainter;\n;\n", "\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport CanvasPainter from 'zrender/lib/canvas/Painter';\nexport function install(registers) {\n  registers.registerPainter('canvas', CanvasPainter);\n}"],
  "mappings": "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",
  "names": ["oldPos", "SVGPathRebuilder", "Definable", "GradientManager", "PatternManager", "img", "ClippathManager", "ShadowManager", "SVGPainter", "diff", "Layer", "i", "width", "height", "parseInt10", "CanvasPainter", "k", "layer", "Painter_default", "install", "Painter_default"]
}
