/**
 * tdesign v1.3.2
 * (c) 2023 tdesign
 * @license MIT
 */

import { _ as _defineProperty } from '../../../_chunks/dep-678ab3b6.mjs';
import setStyle from '../utils/set-style.mjs';
import { getIEVersion } from '../utils/helper.mjs';
import '../../../_chunks/dep-2cdc5ca3.mjs';
import '../../../_chunks/dep-be4991f3.mjs';
import '../../../_chunks/dep-39d4a55c.mjs';
import '../../../_chunks/dep-22fdced0.mjs';
import '../../../_chunks/dep-4dcef6a1.mjs';
import '../../../_chunks/dep-f88ad5fd.mjs';
import '../../../_chunks/dep-64900979.mjs';
import '../../../_chunks/dep-d782c768.mjs';
import '../../../_chunks/dep-755afb41.mjs';
import '../../../_chunks/dep-4c04d566.mjs';
import '../../../_chunks/dep-9bd90f12.mjs';
import '../../../_chunks/dep-b08f13e9.mjs';
import '../../../_chunks/dep-9189b575.mjs';
import '../../../_chunks/dep-7d1b4687.mjs';

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
function circleAdapter(circleElem) {
  var _window, _window$getComputedSt2, _window2, _window2$navigator;
  var basicStyle = {};
  if (!circleElem || typeof window === "undefined") {
    return;
  }
  var _window$getComputedSt = (_window = window) === null || _window === void 0 ? void 0 : (_window$getComputedSt2 = _window.getComputedStyle) === null || _window$getComputedSt2 === void 0 ? void 0 : _window$getComputedSt2.call(_window, circleElem),
    color = _window$getComputedSt.color,
    fontSize = _window$getComputedSt.fontSize;
  var ua = (_window2 = window) === null || _window2 === void 0 ? void 0 : (_window2$navigator = _window2.navigator) === null || _window2$navigator === void 0 ? void 0 : _window2$navigator.userAgent;
  var isSafari = /Safari/.test(ua) && !/Chrome/.test(ua);
  var isIosWechat = /(?=.*iPhone)[?=.*MicroMessenger]/.test(ua) && !/Chrome/.test(ua);
  if (isSafari || isIosWechat) {
    basicStyle = {
      transformOrigin: "0px 0px",
      transform: "scale(".concat(parseInt(fontSize, 10) / 12, ")")
    };
  }
  if (color && getIEVersion() > 11) {
    var matched = color.match(/[\d.]+/g);
    var endColor = matched ? "rgba(".concat(matched[0], ", ").concat(matched[1], ", ").concat(matched[2], ", 0)") : "";
    setStyle(circleElem, _objectSpread(_objectSpread({}, basicStyle), {}, {
      background: "conic-gradient(from 90deg at 50% 50%,".concat(endColor, " 0deg, ").concat(color, " 360deg)")
    }));
  } else {
    setStyle(circleElem, _objectSpread(_objectSpread({}, basicStyle), {}, {
      background: ""
    }));
  }
}

export { circleAdapter as default };
//# sourceMappingURL=circle-adapter.mjs.map
