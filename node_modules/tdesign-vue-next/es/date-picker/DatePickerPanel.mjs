/**
 * tdesign v1.3.2
 * (c) 2023 tdesign
 * @license MIT
 */

import { _ as _defineProperty } from '../_chunks/dep-678ab3b6.mjs';
import { defineComponent, computed, createVNode } from 'vue';
import { d as dayjs } from '../_chunks/dep-72f65da7.mjs';
import { i as isFunction_1 } from '../_chunks/dep-420ddaf9.mjs';
import useSingleValue from './hooks/useSingleValue.mjs';
import { getDefaultFormat, formatDate, parseToDayjs } from '../_common/js/date-picker/format.mjs';
import { subtractMonth, addMonth, extractTimeObj } from '../_common/js/date-picker/utils.mjs';
import datePickerPanelProps from './date-picker-panel-props.mjs';
import datePickerProps from './props.mjs';
import TSinglePanel from './panel/SinglePanel.mjs';
import '../_chunks/dep-2cdc5ca3.mjs';
import '../_chunks/dep-64900979.mjs';
import '../_chunks/dep-d782c768.mjs';
import '../_chunks/dep-91824fdb.mjs';
import '../_chunks/dep-4dcef6a1.mjs';
import '../_chunks/dep-39d4a55c.mjs';
import '../hooks/useVModel.mjs';
import '../_chunks/dep-11e4059f.mjs';
import '../_chunks/dep-7f75e8f1.mjs';
import '../_chunks/dep-f5982c82.mjs';
import '../_chunks/dep-755afb41.mjs';
import '../_chunks/dep-4c04d566.mjs';
import '../_chunks/dep-f12730c4.mjs';
import '../_chunks/dep-9bd90f12.mjs';
import '../_chunks/dep-f88ad5fd.mjs';
import '../_common/js/log/index.mjs';
import '../_common/js/log/log.mjs';
import '../_chunks/dep-5901f702.mjs';
import '../_chunks/dep-5d480929.mjs';
import '../_chunks/dep-e150d7bf.mjs';
import '../_chunks/dep-7a0a3872.mjs';
import '../_chunks/dep-c421aaa0.mjs';
import '../_chunks/dep-4cba74ca.mjs';
import '../_chunks/dep-040e82d9.mjs';
import '../_chunks/dep-384bac4f.mjs';
import '../_chunks/dep-0fd3d7a6.mjs';
import '../hooks/useConfig.mjs';
import '../config-provider/useConfig.mjs';
import '../_chunks/dep-501631b2.mjs';
import '../_chunks/dep-ea2a51d2.mjs';
import '../_chunks/dep-373bac14.mjs';
import '../_chunks/dep-2b16ff22.mjs';
import '../_chunks/dep-be13e22d.mjs';
import '../_chunks/dep-b4198268.mjs';
import '../_chunks/dep-7d088294.mjs';
import '../_chunks/dep-60b55191.mjs';
import '../_chunks/dep-0210dcff.mjs';
import '../_chunks/dep-955385c7.mjs';
import '../_chunks/dep-2f553c9a.mjs';
import '../_chunks/dep-ea07b4f5.mjs';
import '../_chunks/dep-c3ece1cf.mjs';
import '../_chunks/dep-19f33d8c.mjs';
import '../_chunks/dep-3e46ef4c.mjs';
import '../_chunks/dep-d1512a6b.mjs';
import '../_common/js/global-config/default-config.mjs';
import '../_common/js/global-config/locale/zh_CN.mjs';
import '../_chunks/dep-e461959c.mjs';
import '../config-provider/type.mjs';
import './panel/PanelContent.mjs';
import './base/Header.mjs';
import '../_chunks/dep-be4991f3.mjs';
import '../pagination/index.mjs';
import '../pagination/pagination.mjs';
import '../_chunks/dep-22fdced0.mjs';
import '../_chunks/dep-7d1b4687.mjs';
import 'tdesign-icons-vue-next';
import '../hooks/useGlobalIcon.mjs';
import '../input-number/index.mjs';
import '../input-number/input-number.mjs';
import '../button/index.mjs';
import '../button/button.mjs';
import '../loading/index.mjs';
import '../loading/directive.mjs';
import '../loading/plugin.mjs';
import '../loading/loading.mjs';
import '../loading/icon/gradient.mjs';
import '../_common/js/loading/circle-adapter.mjs';
import '../_common/js/utils/set-style.mjs';
import '../_common/js/utils/helper.mjs';
import '../_chunks/dep-b08f13e9.mjs';
import '../_chunks/dep-9189b575.mjs';
import '../utils/dom.mjs';
import '../utils/easing.mjs';
import '../utils/render-tnode.mjs';
import '../_chunks/dep-ba9a2a55.mjs';
import '../_chunks/dep-8c885278.mjs';
import '../_chunks/dep-a0224e27.mjs';
import '../_chunks/dep-7464e57e.mjs';
import '../loading/props.mjs';
import '../hooks/useTeleport.mjs';
import '../utils/withInstall.mjs';
import './style/css.mjs';
import '../loading/type.mjs';
import '../button/props.mjs';
import '../hooks/useRipple.mjs';
import '../hooks/useKeepAnimation.mjs';
import '../utils/set-style.mjs';
import '../form/hooks.mjs';
import '../hooks/tnode.mjs';
import '../button/type.mjs';
import '../input/index.mjs';
import '../input/input.mjs';
import '../input/props.mjs';
import '../input/useInput.mjs';
import '../form/const.mjs';
import '../hooks/index.mjs';
import '../hooks/icon.mjs';
import '../hooks/slot.mjs';
import '../hooks/useCommonClassName.mjs';
import '../hooks/useDefaultValue.mjs';
import '../hooks/useDestroyOnClose.mjs';
import '../hooks/useVirtualScroll.mjs';
import '../input/useLengthLimit.mjs';
import '../input/useInputEventHandler.mjs';
import '../input/useInputWidth.mjs';
import '../input/input-group.mjs';
import '../input/input-group-props.mjs';
import '../input/type.mjs';
import '../input-number/props.mjs';
import '../input-number/useInputNumber.mjs';
import '../_common/js/input-number/number.mjs';
import '../_chunks/dep-1b55023e.mjs';
import '../_common/js/input-number/large-number.mjs';
import '../input-number/type.mjs';
import '../select/index.mjs';
import '../select/select.mjs';
import '../_chunks/dep-aa230c37.mjs';
import '../_chunks/dep-9a005c22.mjs';
import '../_chunks/dep-255f2bfd.mjs';
import '../_chunks/dep-77157fb1.mjs';
import '../_chunks/dep-d3c22e86.mjs';
import '../_chunks/dep-1e6b7508.mjs';
import '../_chunks/dep-c8a60dc2.mjs';
import '../_chunks/dep-5eae49c8.mjs';
import '../common-components/fake-arrow.mjs';
import '../select-input/index.mjs';
import '../select-input/select-input.mjs';
import '../popup/index.mjs';
import '../popup/popup.mjs';
import '@popperjs/core';
import '../popup/container.mjs';
import '../popup/props.mjs';
import '../hooks/useResizeObserver.mjs';
import '../popup/type.mjs';
import '../select-input/props.mjs';
import '../select-input/useSingle.mjs';
import '../select-input/useMultiple.mjs';
import '../tag-input/index.mjs';
import '../tag-input/tag-input.mjs';
import '../tag-input/props.mjs';
import '../tag-input/hooks/useTagScroll.mjs';
import '../tag-input/useTagList.mjs';
import '../tag/index.mjs';
import '../tag/tag.mjs';
import '../tag/props.mjs';
import '../tag/check-tag.mjs';
import '../tag/check-tag-props.mjs';
import '../tag/type.mjs';
import '../tag-input/hooks/useHover.mjs';
import '../tag-input/hooks/useDragSorter.mjs';
import '../tag-input/type.mjs';
import '../select-input/useOverlayInnerStyle.mjs';
import '../select-input/type.mjs';
import '../select/select-panel.mjs';
import '../_chunks/dep-b5e127e2.mjs';
import '../select/option.mjs';
import '../select/option-props.mjs';
import '../checkbox/index.mjs';
import '../checkbox/checkbox.mjs';
import '../checkbox/props.mjs';
import '../checkbox/constants.mjs';
import '../checkbox/group.mjs';
import '../checkbox/checkbox-group-props.mjs';
import '../checkbox/type.mjs';
import '../select/helper.mjs';
import '../select/optionGroup.mjs';
import '../select/option-group-props.mjs';
import '../select/props.mjs';
import '../select/hooks/usePanelVirtualScroll.mjs';
import '../select/hooks/useSelectOptions.mjs';
import '../select/type.mjs';
import '../input-adornment/index.mjs';
import '../input-adornment/input-adornment.mjs';
import '../input-adornment/props.mjs';
import '../input-adornment/type.mjs';
import '../pagination/props.mjs';
import '../pagination/usePaginationClasses.mjs';
import '../pagination/useMoreAction.mjs';
import '../pagination/pagination-mini.mjs';
import '../pagination/pagination-mini-props.mjs';
import '../pagination/type.mjs';
import './base/Table.mjs';
import './base/Cell.mjs';
import '../time-picker/panel/time-picker-panel.mjs';
import '../_common/js/time-picker/const.mjs';
import '../time-picker/panel/props.mjs';
import '../_chunks/dep-273d18b0.mjs';
import '../time-picker/props.mjs';
import '../time-picker/panel/single-panel.mjs';
import '../_chunks/dep-5637f82f.mjs';
import '../_common/js/time-picker/utils.mjs';
import './panel/ExtraContent.mjs';
import './base/Footer.mjs';
import './hooks/useTableData.mjs';
import './hooks/useDisableDate.mjs';

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var _DatePickerPanel = defineComponent({
  name: "TDatePickerPanel",
  props: _objectSpread({
    value: datePickerProps.value,
    defaultValue: datePickerProps.defaultValue,
    modelValue: datePickerProps.modelValue,
    disabled: datePickerProps.disabled,
    disableDate: datePickerProps.disableDate,
    enableTimePicker: datePickerProps.enableTimePicker,
    firstDayOfWeek: datePickerProps.firstDayOfWeek,
    format: datePickerProps.format,
    mode: datePickerProps.mode,
    presets: datePickerProps.presets,
    presetsPlacement: datePickerProps.presetsPlacement,
    timePickerProps: datePickerProps.timePickerProps
  }, datePickerPanelProps),
  setup: function setup(props) {
    var _useSingleValue = useSingleValue(props),
      cacheValue = _useSingleValue.cacheValue,
      value = _useSingleValue.value,
      year = _useSingleValue.year,
      month = _useSingleValue.month,
      time = _useSingleValue.time,
      onChange = _useSingleValue.onChange;
    var formatRef = computed(function () {
      return getDefaultFormat({
        mode: props.mode,
        format: props.format,
        enableTimePicker: props.enableTimePicker
      });
    });
    function onCellClick(date, _ref) {
      var _props$onCellClick;
      var e = _ref.e;
      (_props$onCellClick = props.onCellClick) === null || _props$onCellClick === void 0 ? void 0 : _props$onCellClick.call(props, {
        date: date,
        e: e
      });
      if (props.mode === "date") {
        year.value = date.getFullYear();
        month.value = date.getMonth();
      }
      if (props.enableTimePicker) {
        cacheValue.value = formatDate(date, {
          format: formatRef.value.format
        });
      } else {
        onChange === null || onChange === void 0 ? void 0 : onChange(formatDate(date, {
          format: formatRef.value.format
        }), {
          dayjsValue: parseToDayjs(date, formatRef.value.format),
          trigger: "pick"
        });
      }
    }
    function onJumperClick(_ref2) {
      var trigger = _ref2.trigger;
      var triggerMap = {
        prev: "arrow-previous",
        next: "arrow-next"
      };
      var monthCountMap = {
        date: 1,
        week: 1,
        month: 12,
        quarter: 12,
        year: 120
      };
      var monthCount = monthCountMap[props.mode] || 0;
      var current = new Date(year.value, month.value);
      var next = null;
      if (trigger === "prev") {
        next = subtractMonth(current, monthCount);
      } else if (trigger === "current") {
        next = new Date();
      } else if (trigger === "next") {
        next = addMonth(current, monthCount);
      }
      var nextYear = next.getFullYear();
      var nextMonth = next.getMonth();
      if (year.value !== nextYear) {
        var _props$onYearChange;
        (_props$onYearChange = props.onYearChange) === null || _props$onYearChange === void 0 ? void 0 : _props$onYearChange.call(props, {
          year: nextYear,
          date: dayjs(value.value).toDate(),
          trigger: trigger === "current" ? "today" : "year-".concat(triggerMap[trigger])
        });
      }
      if (month.value !== nextMonth) {
        var _props$onMonthChange;
        (_props$onMonthChange = props.onMonthChange) === null || _props$onMonthChange === void 0 ? void 0 : _props$onMonthChange.call(props, {
          month: nextMonth,
          date: dayjs(value.value).toDate(),
          trigger: trigger === "current" ? "today" : "month-".concat(triggerMap[trigger])
        });
      }
      year.value = nextYear;
      month.value = nextMonth;
    }
    function onTimePickerChange(val) {
      var _props$onTimeChange;
      time.value = val;
      var _extractTimeObj = extractTimeObj(val),
        hours = _extractTimeObj.hours,
        minutes = _extractTimeObj.minutes,
        seconds = _extractTimeObj.seconds,
        milliseconds = _extractTimeObj.milliseconds,
        meridiem = _extractTimeObj.meridiem;
      var nextHours = hours;
      if (/am/i.test(meridiem) && nextHours === 12) nextHours -= 12;
      if (/pm/i.test(meridiem) && nextHours < 12) nextHours += 12;
      var currentDate = !dayjs(cacheValue.value, formatRef.value.format).isValid() ? dayjs() : dayjs(cacheValue.value, formatRef.value.format);
      var nextDate = currentDate.hour(nextHours).minute(minutes).second(seconds).millisecond(milliseconds).toDate();
      cacheValue.value = formatDate(nextDate, {
        format: formatRef.value.format
      });
      (_props$onTimeChange = props.onTimeChange) === null || _props$onTimeChange === void 0 ? void 0 : _props$onTimeChange.call(props, {
        time: val,
        date: dayjs(value.value).toDate(),
        trigger: "time-hour"
      });
    }
    function onConfirmClick(_ref3) {
      var _props$onConfirm;
      var e = _ref3.e;
      onChange === null || onChange === void 0 ? void 0 : onChange(formatDate(cacheValue.value, {
        format: formatRef.value.format
      }), {
        dayjsValue: parseToDayjs(cacheValue.value, formatRef.value.format),
        trigger: "confirm"
      });
      (_props$onConfirm = props.onConfirm) === null || _props$onConfirm === void 0 ? void 0 : _props$onConfirm.call(props, {
        date: dayjs(cacheValue.value).toDate(),
        e: e
      });
    }
    function onPresetClick(preset, context) {
      var _props$onPresetClick;
      var presetVal = isFunction_1(preset) ? preset() : preset;
      onChange === null || onChange === void 0 ? void 0 : onChange(formatDate(presetVal, {
        format: formatRef.value.format
      }), {
        dayjsValue: parseToDayjs(presetVal, formatRef.value.format),
        trigger: "preset"
      });
      (_props$onPresetClick = props.onPresetClick) === null || _props$onPresetClick === void 0 ? void 0 : _props$onPresetClick.call(props, context);
    }
    function onYearChange(nextYear) {
      var _props$onYearChange2;
      year.value = nextYear;
      (_props$onYearChange2 = props.onYearChange) === null || _props$onYearChange2 === void 0 ? void 0 : _props$onYearChange2.call(props, {
        year: year.value,
        date: dayjs(value.value).toDate(),
        trigger: "year-select"
      });
    }
    function onMonthChange(nextMonth) {
      var _props$onMonthChange2;
      month.value = nextMonth;
      (_props$onMonthChange2 = props.onMonthChange) === null || _props$onMonthChange2 === void 0 ? void 0 : _props$onMonthChange2.call(props, {
        month: month.value,
        date: dayjs(value.value).toDate(),
        trigger: "month-select"
      });
    }
    var panelProps = computed(function () {
      return {
        value: cacheValue.value,
        year: year.value,
        month: month.value,
        mode: props.mode,
        format: formatRef.value.format,
        presets: props.presets,
        time: time.value,
        disableDate: props.disableDate,
        firstDayOfWeek: props.firstDayOfWeek,
        timePickerProps: props.timePickerProps,
        enableTimePicker: props.enableTimePicker,
        presetsPlacement: props.presetsPlacement,
        panelClick: props.onPanelClick,
        onCellClick: onCellClick,
        onJumperClick: onJumperClick,
        onConfirmClick: onConfirmClick,
        onPresetClick: onPresetClick,
        onYearChange: onYearChange,
        onMonthChange: onMonthChange,
        onTimePickerChange: onTimePickerChange
      };
    });
    return function () {
      return createVNode(TSinglePanel, panelProps.value, null);
    };
  }
});

export { _DatePickerPanel as default };
//# sourceMappingURL=DatePickerPanel.mjs.map
