/**
 * tdesign v1.3.2
 * (c) 2023 tdesign
 * @license MIT
 */

import { _ as _defineProperty } from '../_chunks/dep-678ab3b6.mjs';
import { _ as _slicedToArray } from '../_chunks/dep-4dcef6a1.mjs';
import { defineComponent, toRefs, provide, createVNode, mergeProps } from 'vue';
import _TabPanel from './tab-panel.mjs';
import TTabNav from './tab-nav.mjs';
import props from './props.mjs';
import { useTNodeJSX } from '../hooks/tnode.mjs';
import { usePrefixClass } from '../hooks/useConfig.mjs';
import useVModel from '../hooks/useVModel.mjs';
import { i as isArray_1 } from '../_chunks/dep-755afb41.mjs';
import '../_chunks/dep-2cdc5ca3.mjs';
import '../_chunks/dep-39d4a55c.mjs';
import './tab-panel-props.mjs';
import '../hooks/useDestroyOnClose.mjs';
import '../_chunks/dep-d3c22e86.mjs';
import '../_chunks/dep-64900979.mjs';
import '../_chunks/dep-91824fdb.mjs';
import '../_chunks/dep-420ddaf9.mjs';
import '../_chunks/dep-d782c768.mjs';
import '../_chunks/dep-5d480929.mjs';
import '../_chunks/dep-f12730c4.mjs';
import '../_chunks/dep-9bd90f12.mjs';
import 'tdesign-icons-vue-next';
import '../_common/js/tabs/base.mjs';
import './tab-nav-item.mjs';
import '../hooks/useRipple.mjs';
import '../hooks/useKeepAnimation.mjs';
import '../_chunks/dep-c3ece1cf.mjs';
import '../_chunks/dep-373bac14.mjs';
import '../_chunks/dep-2b16ff22.mjs';
import '../_chunks/dep-be13e22d.mjs';
import '../_chunks/dep-040e82d9.mjs';
import '../_chunks/dep-c421aaa0.mjs';
import '../_chunks/dep-b4198268.mjs';
import '../_chunks/dep-7d088294.mjs';
import '../_chunks/dep-60b55191.mjs';
import '../_chunks/dep-4c04d566.mjs';
import '../_chunks/dep-0210dcff.mjs';
import '../_chunks/dep-384bac4f.mjs';
import '../_chunks/dep-955385c7.mjs';
import '../_chunks/dep-0fd3d7a6.mjs';
import '../_chunks/dep-4cba74ca.mjs';
import '../_chunks/dep-19f33d8c.mjs';
import '../_chunks/dep-3e46ef4c.mjs';
import '../_chunks/dep-d1512a6b.mjs';
import '../_chunks/dep-7a0a3872.mjs';
import '../_common/js/global-config/default-config.mjs';
import '../_common/js/global-config/locale/zh_CN.mjs';
import '../_chunks/dep-72f65da7.mjs';
import '../_chunks/dep-e461959c.mjs';
import '../config-provider/useConfig.mjs';
import '../_chunks/dep-501631b2.mjs';
import '../_chunks/dep-ea2a51d2.mjs';
import '../_chunks/dep-2f553c9a.mjs';
import '../_chunks/dep-ea07b4f5.mjs';
import '../_chunks/dep-f88ad5fd.mjs';
import '../config-provider/type.mjs';
import '../utils/set-style.mjs';
import '../hooks/useGlobalIcon.mjs';
import './tab-nav-bar.mjs';
import '../utils/helper.mjs';
import '../_chunks/dep-22fdced0.mjs';
import '../_chunks/dep-8c885278.mjs';
import '../_chunks/dep-f5982c82.mjs';
import '../_chunks/dep-a0224e27.mjs';
import '../_chunks/dep-7464e57e.mjs';
import '../_chunks/dep-e150d7bf.mjs';
import '../_chunks/dep-7f75e8f1.mjs';
import '../_chunks/dep-9189b575.mjs';
import '../_chunks/dep-b08f13e9.mjs';
import '../_chunks/dep-7d1b4687.mjs';
import '../hooks/useListener.mjs';
import '../hooks/useDragSort.mjs';
import '../_chunks/dep-11e4059f.mjs';
import '../utils/render-tnode.mjs';
import '../_chunks/dep-ba9a2a55.mjs';

var _Tabs = defineComponent({
  name: "TTabs",
  props: props,
  setup: function setup(props2) {
    var COMPONENT_NAME = usePrefixClass("tabs");
    var classPrefix = usePrefixClass();
    var renderTNodeJSX = useTNodeJSX();
    var _toRefs = toRefs(props2),
      value = _toRefs.value,
      modelValue = _toRefs.modelValue;
    var _useVModel = useVModel(value, modelValue, props2.defaultValue || "", props2.onChange),
      _useVModel2 = _slicedToArray(_useVModel, 2),
      tabValue = _useVModel2[0],
      setTabValue = _useVModel2[1];
    provide("tabs", {
      value: tabValue
    });
    var onTabAdd = function onTabAdd(context) {
      var _props2$onAdd;
      (_props2$onAdd = props2.onAdd) === null || _props2$onAdd === void 0 ? void 0 : _props2$onAdd.call(props2, {
        e: context.e
      });
    };
    var onTabChange = function onTabChange(value2) {
      setTabValue(value2);
    };
    var onTabRemove = function onTabRemove(_ref) {
      var e = _ref.e,
        value2 = _ref.value,
        index = _ref.index;
      props2.onRemove({
        value: value2,
        index: index,
        e: e
      });
    };
    var getSlotPanels = function getSlotPanels() {
      var content = renderTNodeJSX("default");
      if (!content) return [];
      content = content.map(function (item) {
        if (item.children && isArray_1(item.children)) return item.children;
        return item;
      }).flat().filter(function (item) {
        return item.type.name === "TTabPanel";
      });
      return content;
    };
    var renderHeader = function renderHeader() {
      var _props2$list, _ref2;
      var panels = ((_props2$list = props2.list) !== null && _props2$list !== void 0 && _props2$list.length ? props2.list : getSlotPanels()) || [];
      var panelsData = panels.map(function (item) {
        var selfItem = item;
        if (item.props) {
          Object.keys(item.props).forEach(function (key) {
            selfItem[key] = item.props[key];
          });
        }
        return selfItem;
      });
      var tabNavProps = {
        theme: props2.theme,
        value: tabValue.value,
        size: props2.size,
        disabled: props2.disabled,
        placement: props2.placement,
        addable: props2.addable,
        panels: panelsData,
        dragSort: props2.dragSort
      };
      return createVNode("div", {
        "class": (_ref2 = {}, _defineProperty(_ref2, "".concat(classPrefix.value, "-tabs__header"), true), _defineProperty(_ref2, "".concat(classPrefix.value, "-is-").concat(props2.placement), true), _ref2)
      }, [createVNode(TTabNav, mergeProps(tabNavProps, {
        "onDragSort": props2.onDragSort,
        "onChange": onTabChange,
        "onAdd": onTabAdd,
        "onRemove": onTabRemove
      }), null)]);
    };
    var renderContent = function renderContent() {
      var _props2$list2;
      var panels = getSlotPanels();
      if ((_props2$list2 = props2.list) !== null && _props2$list2 !== void 0 && _props2$list2.length) {
        return props2.list.map(function (item) {
          return createVNode(_TabPanel, mergeProps(item, {
            "onRemove": onTabRemove
          }), null);
        });
      }
      if (panels && panels.length) {
        return createVNode("div", {
          "class": ["".concat(classPrefix.value, "-tabs__content")]
        }, [panels]);
      }
    };
    return function () {
      return createVNode("div", {
        "class": [COMPONENT_NAME.value]
      }, [props2.placement !== "bottom" ? [renderHeader(), renderContent()] : [renderContent(), renderHeader()]]);
    };
  }
});

export { _Tabs as default };
//# sourceMappingURL=tabs.mjs.map
