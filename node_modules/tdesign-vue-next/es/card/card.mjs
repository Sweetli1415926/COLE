/**
 * tdesign v1.3.2
 * (c) 2023 tdesign
 * @license MIT
 */

import { isVNode, defineComponent, computed, createVNode } from 'vue';
import { usePrefixClass, useCommonClassName } from '../hooks/useConfig.mjs';
import { useTNodeJSX } from '../hooks/tnode.mjs';
import { Loading } from '../loading/index.mjs';
import props from './props.mjs';
import { i as isString_1 } from '../_chunks/dep-f88ad5fd.mjs';
import '../config-provider/useConfig.mjs';
import '../_chunks/dep-420ddaf9.mjs';
import '../_chunks/dep-64900979.mjs';
import '../_chunks/dep-d782c768.mjs';
import '../_chunks/dep-2cdc5ca3.mjs';
import '../_chunks/dep-91824fdb.mjs';
import '../_chunks/dep-501631b2.mjs';
import '../_chunks/dep-ea2a51d2.mjs';
import '../_chunks/dep-373bac14.mjs';
import '../_chunks/dep-2b16ff22.mjs';
import '../_chunks/dep-be13e22d.mjs';
import '../_chunks/dep-040e82d9.mjs';
import '../_chunks/dep-c421aaa0.mjs';
import '../_chunks/dep-b4198268.mjs';
import '../_chunks/dep-7d088294.mjs';
import '../_chunks/dep-60b55191.mjs';
import '../_chunks/dep-9bd90f12.mjs';
import '../_chunks/dep-755afb41.mjs';
import '../_chunks/dep-4c04d566.mjs';
import '../_chunks/dep-0210dcff.mjs';
import '../_chunks/dep-384bac4f.mjs';
import '../_chunks/dep-955385c7.mjs';
import '../_chunks/dep-0fd3d7a6.mjs';
import '../_chunks/dep-4cba74ca.mjs';
import '../_chunks/dep-2f553c9a.mjs';
import '../_chunks/dep-ea07b4f5.mjs';
import '../_chunks/dep-c3ece1cf.mjs';
import '../_chunks/dep-19f33d8c.mjs';
import '../_chunks/dep-3e46ef4c.mjs';
import '../_chunks/dep-d1512a6b.mjs';
import '../_chunks/dep-7a0a3872.mjs';
import '../_common/js/global-config/default-config.mjs';
import '../_common/js/global-config/locale/zh_CN.mjs';
import '../_chunks/dep-72f65da7.mjs';
import '../_chunks/dep-e461959c.mjs';
import '../config-provider/type.mjs';
import '../_chunks/dep-8c885278.mjs';
import '../_chunks/dep-f5982c82.mjs';
import '../_chunks/dep-f12730c4.mjs';
import '../_chunks/dep-a0224e27.mjs';
import '../_chunks/dep-7464e57e.mjs';
import '../_chunks/dep-e150d7bf.mjs';
import '../_chunks/dep-7f75e8f1.mjs';
import '../_chunks/dep-11e4059f.mjs';
import '../utils/render-tnode.mjs';
import '../_chunks/dep-ba9a2a55.mjs';
import '../loading/directive.mjs';
import '../loading/plugin.mjs';
import '../_chunks/dep-678ab3b6.mjs';
import '../loading/loading.mjs';
import '../_chunks/dep-4dcef6a1.mjs';
import '../_chunks/dep-39d4a55c.mjs';
import '../loading/icon/gradient.mjs';
import '../_common/js/loading/circle-adapter.mjs';
import '../_common/js/utils/set-style.mjs';
import '../_common/js/utils/helper.mjs';
import '../_chunks/dep-be4991f3.mjs';
import '../_chunks/dep-22fdced0.mjs';
import '../_chunks/dep-b08f13e9.mjs';
import '../_chunks/dep-9189b575.mjs';
import '../_chunks/dep-7d1b4687.mjs';
import '../utils/dom.mjs';
import '../utils/easing.mjs';
import '../loading/props.mjs';
import '../hooks/useTeleport.mjs';
import '../utils/withInstall.mjs';
import './style/css.mjs';
import '../loading/type.mjs';

function _isSlot(s) {
  return typeof s === 'function' || Object.prototype.toString.call(s) === '[object Object]' && !isVNode(s);
}
var _Card = defineComponent({
  name: "TCard",
  props: props,
  setup: function setup(props2, _ref) {
    var slots = _ref.slots;
    var renderTNodeJSX = useTNodeJSX();
    var COMPONENT_NAME = usePrefixClass("card");
    var _useCommonClassName = useCommonClassName(),
      SIZE = _useCommonClassName.SIZE;
    var baseCls = computed(function () {
      var defaultClass = [COMPONENT_NAME.value];
      if (props2.size === "small") defaultClass.push("".concat(SIZE.value[props2.size]));
      if (props2.bordered) defaultClass.push("".concat(COMPONENT_NAME.value, "--bordered"));
      if (props2.shadow) defaultClass.push("".concat(COMPONENT_NAME.value, "--shadow"));
      if (props2.hoverShadow) defaultClass.push("".concat(COMPONENT_NAME.value, "--shadow-hover"));
      return defaultClass;
    });
    var headerCls = computed(function () {
      var defaultClass = ["".concat(COMPONENT_NAME.value, "__header")];
      return props2.headerBordered ? defaultClass.concat("".concat(COMPONENT_NAME.value, "__title--bordered")) : ["".concat(COMPONENT_NAME.value, "__header")];
    });
    var headerWrapperCls = usePrefixClass("card__header-wrapper");
    var headerAvatarCls = usePrefixClass("card__avatar");
    var headerTitleCls = usePrefixClass("card__title");
    var headerSubTitleCls = usePrefixClass("card__subtitle");
    var headerDescriptionCls = usePrefixClass("card__description");
    var actionsCls = usePrefixClass("card__actions");
    var bodyCls = usePrefixClass("card__body");
    var coverCls = usePrefixClass("card__cover");
    var footerCls = usePrefixClass("card__footer");
    var footerWrapperCls = usePrefixClass("card__footer-wrapper");
    var isPoster2 = computed(function () {
      return props2.theme === "poster2";
    });
    var showTitle = computed(function () {
      return props2.title || slots.title;
    });
    var showHeader = computed(function () {
      return props2.header || slots.header;
    });
    var showSubtitle = computed(function () {
      return props2.subtitle || slots.subtitle;
    });
    var showAvatar = computed(function () {
      return props2.avatar || slots.avatar;
    });
    var showDescription = computed(function () {
      return props2.description || slots.description;
    });
    var showStatus = computed(function () {
      return props2.status || slots.status;
    });
    var showActions = computed(function () {
      return props2.actions || slots.actions;
    });
    var showFooter = computed(function () {
      return props2.footer || slots.footer;
    });
    var showCover = computed(function () {
      return props2.cover || slots.cover;
    });
    var showLoading = computed(function () {
      return props2.loading || slots.loading;
    });
    var showContent = computed(function () {
      return props2.content || slots.content || props2["default"] || slots["default"];
    });
    var isHeaderRender = computed(function () {
      return showHeader.value || showTitle.value || showSubtitle.value || showDescription.value || showAvatar.value || showStatus.value && isPoster2.value || showActions.value && !isPoster2.value;
    });
    var isFooterRender = computed(function () {
      return showFooter.value || showActions.value && isPoster2.value;
    });
    var renderHeader = function renderHeader() {
      if (showHeader.value) return createVNode("div", {
        "class": headerCls.value
      }, [renderTNodeJSX("header")]);
      return createVNode("div", {
        "class": headerCls.value
      }, [createVNode("div", {
        "class": headerWrapperCls.value
      }, [showAvatar.value && createVNode("div", {
        "class": headerAvatarCls.value
      }, [renderTNodeJSX("avatar")]), createVNode("div", null, [showTitle.value && createVNode("span", {
        "class": headerTitleCls.value
      }, [renderTNodeJSX("title")]), showSubtitle.value && createVNode("span", {
        "class": headerSubTitleCls.value
      }, [renderTNodeJSX("subtitle")]), showDescription.value && createVNode("p", {
        "class": headerDescriptionCls.value
      }, [renderTNodeJSX("description")])])]), showActions.value && !isPoster2.value && createVNode("div", {
        "class": actionsCls.value
      }, [renderTNodeJSX("actions")]), showStatus.value && createVNode("div", {
        "class": actionsCls.value
      }, [renderTNodeJSX("status")])]);
    };
    var renderCover = function renderCover() {
      var textCover = isString_1(props2.cover);
      return createVNode("div", {
        "class": coverCls.value
      }, [textCover ? createVNode("img", {
        "src": props2.cover
      }, null) : renderTNodeJSX("cover")]);
    };
    return function () {
      var content = createVNode("div", {
        "class": baseCls.value
      }, [isHeaderRender.value ? renderHeader() : null, showCover.value ? renderCover() : null, showContent.value && createVNode("div", {
        "class": bodyCls.value
      }, [renderTNodeJSX("default") || renderTNodeJSX("content")]), isFooterRender.value && createVNode("div", {
        "class": footerCls.value
      }, [createVNode("div", {
        "class": footerWrapperCls.value
      }, [renderTNodeJSX("footer")]), showActions.value && isPoster2.value && createVNode("div", {
        "class": actionsCls.value
      }, [renderTNodeJSX("actions")])])]);
      if (showLoading.value) {
        return renderTNodeJSX("loading") || createVNode(Loading, null, _isSlot(content) ? content : {
          "default": function _default() {
            return [content];
          }
        });
      }
      return content;
    };
  }
});

export { _Card as default };
//# sourceMappingURL=card.mjs.map
