/**
 * tdesign v1.3.2
 * (c) 2023 tdesign
 * @license MIT
 */

import { defineComponent, toRefs, provide, reactive, createVNode, mergeProps } from 'vue';
import props from './props.mjs';
import _BreadcrumbItem from './breadcrumb-item.mjs';
import { useTNodeJSX } from '../hooks/tnode.mjs';
import { usePrefixClass } from '../hooks/useConfig.mjs';
import '../_chunks/dep-678ab3b6.mjs';
import '../_chunks/dep-2cdc5ca3.mjs';
import 'tdesign-icons-vue-next';
import './breadcrumb-item-props.mjs';
import '../tooltip/index.mjs';
import '../tooltip/tooltip.mjs';
import '../_chunks/dep-4dcef6a1.mjs';
import '../_chunks/dep-39d4a55c.mjs';
import '../_chunks/dep-420ddaf9.mjs';
import '../_chunks/dep-64900979.mjs';
import '../_chunks/dep-d782c768.mjs';
import '../_chunks/dep-91824fdb.mjs';
import '../_chunks/dep-b5e127e2.mjs';
import '../_chunks/dep-f5982c82.mjs';
import '../_chunks/dep-755afb41.mjs';
import '../_chunks/dep-4c04d566.mjs';
import '../_chunks/dep-f12730c4.mjs';
import '../_chunks/dep-9bd90f12.mjs';
import '../_chunks/dep-ea2a51d2.mjs';
import '../_chunks/dep-373bac14.mjs';
import '../_chunks/dep-2b16ff22.mjs';
import '../_chunks/dep-be13e22d.mjs';
import '../_chunks/dep-040e82d9.mjs';
import '../_chunks/dep-c421aaa0.mjs';
import '../_chunks/dep-b4198268.mjs';
import '../_chunks/dep-7d088294.mjs';
import '../_chunks/dep-60b55191.mjs';
import '../_chunks/dep-0210dcff.mjs';
import '../_chunks/dep-384bac4f.mjs';
import '../_chunks/dep-955385c7.mjs';
import '../_chunks/dep-0fd3d7a6.mjs';
import '../_chunks/dep-4cba74ca.mjs';
import '../_chunks/dep-2f553c9a.mjs';
import '../_chunks/dep-ea07b4f5.mjs';
import '../_chunks/dep-9a005c22.mjs';
import '../_chunks/dep-e150d7bf.mjs';
import '../_chunks/dep-d1512a6b.mjs';
import '../_chunks/dep-77157fb1.mjs';
import '../_chunks/dep-3e46ef4c.mjs';
import '../tooltip/props.mjs';
import '../popup/props.mjs';
import '../popup/index.mjs';
import '../popup/popup.mjs';
import '@popperjs/core';
import '../_chunks/dep-f88ad5fd.mjs';
import '../hooks/index.mjs';
import '../hooks/icon.mjs';
import '../hooks/slot.mjs';
import '../hooks/useCommonClassName.mjs';
import '../config-provider/useConfig.mjs';
import '../_chunks/dep-501631b2.mjs';
import '../_chunks/dep-c3ece1cf.mjs';
import '../_chunks/dep-19f33d8c.mjs';
import '../_chunks/dep-7a0a3872.mjs';
import '../_common/js/global-config/default-config.mjs';
import '../_common/js/global-config/locale/zh_CN.mjs';
import '../_chunks/dep-72f65da7.mjs';
import '../_chunks/dep-e461959c.mjs';
import '../config-provider/type.mjs';
import '../hooks/useDefaultValue.mjs';
import '../_chunks/dep-11e4059f.mjs';
import '../_chunks/dep-7f75e8f1.mjs';
import '../hooks/useDestroyOnClose.mjs';
import '../hooks/useKeepAnimation.mjs';
import '../hooks/useRipple.mjs';
import '../utils/set-style.mjs';
import '../hooks/useVirtualScroll.mjs';
import '../hooks/useVModel.mjs';
import '../utils/dom.mjs';
import '../utils/easing.mjs';
import '../_common/js/utils/set-style.mjs';
import '../popup/container.mjs';
import '../_chunks/dep-be4991f3.mjs';
import '../hooks/useResizeObserver.mjs';
import '../utils/withInstall.mjs';
import './style/css.mjs';
import '../popup/type.mjs';
import '../_chunks/dep-8c885278.mjs';
import '../_chunks/dep-a0224e27.mjs';
import '../_chunks/dep-7464e57e.mjs';
import '../utils/render-tnode.mjs';
import '../_chunks/dep-ba9a2a55.mjs';
import '../tooltip/util.mjs';
import '../tooltip/type.mjs';
import '../hooks/useGlobalIcon.mjs';

var _Breadcrumb = defineComponent({
  name: "TBreadcrumb",
  props: props,
  setup: function setup(props2, _ref) {
    var slots = _ref.slots;
    var _toRefs = toRefs(props2),
      separator = _toRefs.separator,
      theme = _toRefs.theme,
      maxItemWidth = _toRefs.maxItemWidth;
    var COMPONENT_NAME = usePrefixClass("breadcrumb");
    provide("tBreadcrumb", reactive({
      separator: separator,
      theme: theme,
      slots: {
        separator: slots.separator
      },
      maxItemWidth: maxItemWidth
    }));
    var renderTNodeJSX = useTNodeJSX();
    return function () {
      var content = renderTNodeJSX("default");
      if (props2.options && props2.options.length) {
        content = props2.options.map(function (option, index) {
          return createVNode(_BreadcrumbItem, mergeProps(option, {
            "key": index
          }), {
            "default": function _default() {
              return [option["default"] || option.content];
            }
          });
        });
      }
      return createVNode("div", {
        "class": COMPONENT_NAME.value
      }, [content]);
    };
  }
});

export { _Breadcrumb as default };
//# sourceMappingURL=breadcrumb.mjs.map
