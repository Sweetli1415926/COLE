/**
 * tdesign v1.3.2
 * (c) 2023 tdesign
 * @license MIT
 */

import { getWindowScroll, getElmCssPropValue, isFixed } from '../../utils/dom.mjs';
import '../../_chunks/dep-64900979.mjs';
import '../../_chunks/dep-f88ad5fd.mjs';
import '../../_chunks/dep-d782c768.mjs';
import '../../_chunks/dep-2cdc5ca3.mjs';
import '../../_chunks/dep-755afb41.mjs';
import '../../_chunks/dep-4c04d566.mjs';
import '../../_chunks/dep-9bd90f12.mjs';
import '../../_chunks/dep-420ddaf9.mjs';
import '../../_chunks/dep-91824fdb.mjs';
import '../../utils/easing.mjs';

function getRelativePosition(elm) {
  var relativeElm = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : document.body;
  var _getWindowScroll = getWindowScroll(),
    scrollTop = _getWindowScroll.scrollTop,
    scrollLeft = _getWindowScroll.scrollLeft;
  var _elm$getBoundingClien = elm.getBoundingClientRect(),
    elmTop = _elm$getBoundingClien.top,
    elmLeft = _elm$getBoundingClien.left;
  var _relativeElm$getBound = relativeElm.getBoundingClientRect(),
    relElmTop = _relativeElm$getBound.top,
    relElmLeft = _relativeElm$getBound.left;
  var relativeElmPosition = getElmCssPropValue(relativeElm, "position");
  if (relativeElm.tagName.toLowerCase() !== "body" && relativeElmPosition === "relative" || relativeElmPosition === "sticky") {
    return {
      top: elmTop - relElmTop,
      left: elmLeft - relElmLeft
    };
  }
  if (isFixed(elm)) {
    return {
      top: elmTop,
      left: elmLeft
    };
  }
  return {
    top: elmTop + scrollTop,
    left: elmLeft + scrollLeft
  };
}

export { getRelativePosition as default };
//# sourceMappingURL=getRelativePosition.mjs.map
