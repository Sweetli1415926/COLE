/**
 * tdesign v1.3.2
 * (c) 2023 tdesign
 * @license MIT
 */

import { _ as _defineProperty } from '../../_chunks/dep-678ab3b6.mjs';
import { defineComponent, toRefs, ref, computed, nextTick, onMounted, watch, createVNode, mergeProps } from 'vue';
import { d as dayjs } from '../../_chunks/dep-72f65da7.mjs';
import { c as customParseFormat } from '../../_chunks/dep-5901f702.mjs';
import { DEFAULT_FORMAT, DEFAULT_STEPS } from '../../_common/js/time-picker/const.mjs';
import { panelProps } from './props.mjs';
import SinglePanel from './single-panel.mjs';
import TButton from '../../button/button.mjs';
import { usePrefixClass } from '../../hooks/useConfig.mjs';
import { useConfig } from '../../config-provider/useConfig.mjs';
import '../../_chunks/dep-2cdc5ca3.mjs';
import '../../_chunks/dep-64900979.mjs';
import '../../_chunks/dep-5d480929.mjs';
import '../../_chunks/dep-91824fdb.mjs';
import '../../_chunks/dep-420ddaf9.mjs';
import '../../_chunks/dep-d782c768.mjs';
import '../../_chunks/dep-f12730c4.mjs';
import '../../_chunks/dep-9bd90f12.mjs';
import '../../_chunks/dep-273d18b0.mjs';
import '../props.mjs';
import '../../_chunks/dep-4dcef6a1.mjs';
import '../../_chunks/dep-39d4a55c.mjs';
import '../../_chunks/dep-d3c22e86.mjs';
import '../../_chunks/dep-7a0a3872.mjs';
import '../../_chunks/dep-c421aaa0.mjs';
import '../../_chunks/dep-4cba74ca.mjs';
import '../../_chunks/dep-040e82d9.mjs';
import '../../_chunks/dep-384bac4f.mjs';
import '../../_chunks/dep-0fd3d7a6.mjs';
import '../../_chunks/dep-f5982c82.mjs';
import '../../_chunks/dep-755afb41.mjs';
import '../../_chunks/dep-4c04d566.mjs';
import '../../_chunks/dep-7464e57e.mjs';
import '../../_chunks/dep-e150d7bf.mjs';
import '../../_chunks/dep-5637f82f.mjs';
import '../../_common/js/time-picker/utils.mjs';
import '../../_chunks/dep-be4991f3.mjs';
import '../../loading/index.mjs';
import '../../loading/directive.mjs';
import '../../loading/plugin.mjs';
import '../../loading/loading.mjs';
import '../../loading/icon/gradient.mjs';
import '../../_common/js/loading/circle-adapter.mjs';
import '../../_common/js/utils/set-style.mjs';
import '../../_common/js/utils/helper.mjs';
import '../../_chunks/dep-22fdced0.mjs';
import '../../_chunks/dep-f88ad5fd.mjs';
import '../../_chunks/dep-b08f13e9.mjs';
import '../../_chunks/dep-9189b575.mjs';
import '../../_chunks/dep-7d1b4687.mjs';
import '../../utils/dom.mjs';
import '../../utils/easing.mjs';
import '../../utils/render-tnode.mjs';
import '../../_chunks/dep-ba9a2a55.mjs';
import '../../_chunks/dep-2f553c9a.mjs';
import '../../_chunks/dep-0210dcff.mjs';
import '../../_chunks/dep-955385c7.mjs';
import '../../_chunks/dep-be13e22d.mjs';
import '../../_chunks/dep-60b55191.mjs';
import '../../_chunks/dep-8c885278.mjs';
import '../../_chunks/dep-a0224e27.mjs';
import '../../_chunks/dep-7f75e8f1.mjs';
import '../../_chunks/dep-11e4059f.mjs';
import '../../loading/props.mjs';
import '../../hooks/useTeleport.mjs';
import '../../_chunks/dep-501631b2.mjs';
import '../../_chunks/dep-ea2a51d2.mjs';
import '../../_chunks/dep-373bac14.mjs';
import '../../_chunks/dep-2b16ff22.mjs';
import '../../_chunks/dep-b4198268.mjs';
import '../../_chunks/dep-7d088294.mjs';
import '../../_chunks/dep-ea07b4f5.mjs';
import '../../_chunks/dep-c3ece1cf.mjs';
import '../../_chunks/dep-19f33d8c.mjs';
import '../../_chunks/dep-3e46ef4c.mjs';
import '../../_chunks/dep-d1512a6b.mjs';
import '../../_common/js/global-config/default-config.mjs';
import '../../_common/js/global-config/locale/zh_CN.mjs';
import '../../_chunks/dep-e461959c.mjs';
import '../../config-provider/type.mjs';
import '../../utils/withInstall.mjs';
import './style/css.mjs';
import '../../loading/type.mjs';
import '../../button/props.mjs';
import '../../hooks/useRipple.mjs';
import '../../hooks/useKeepAnimation.mjs';
import '../../utils/set-style.mjs';
import '../../form/hooks.mjs';
import '../../hooks/tnode.mjs';

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
dayjs.extend(customParseFormat);
var _TimePickerPanel = defineComponent({
  name: "TTimePickerPanel",
  props: _objectSpread(_objectSpread({}, panelProps()), {}, {
    isFooterDisplay: Boolean,
    handleConfirmClick: Function,
    onChange: Function
  }),
  setup: function setup(props) {
    var panelClassName = usePrefixClass("time-picker__panel");
    var _toRefs = toRefs(props),
      steps = _toRefs.steps,
      isFooterDisplay = _toRefs.isFooterDisplay,
      isShowPanel = _toRefs.isShowPanel;
    var triggerScroll = ref(false);
    var panelRef = ref();
    var _useConfig = useConfig("timePicker"),
      globalConfig = _useConfig.globalConfig;
    var showNowTimeBtn = computed(function () {
      return !!steps.value.filter(function (v) {
        return v > 1;
      }).length;
    });
    var defaultValue = computed(function () {
      var isStepsSet = showNowTimeBtn.value;
      var formattedValue = dayjs(props.value, props.format);
      if (props.value && formattedValue.isValid()) {
        return formattedValue.format(props.format);
      }
      if (isStepsSet) {
        return dayjs().hour(0).minute(0).second(0).format(props.format);
      }
      return dayjs().hour(0).minute(0).second(0).format(props.format);
    });
    var panelColUpdate = function panelColUpdate() {
      nextTick(function () {
        triggerScroll.value = true;
      });
    };
    var resetTriggerScroll = function resetTriggerScroll() {
      triggerScroll.value = false;
    };
    onMounted(function () {
      panelColUpdate();
    });
    watch(function () {
      return isShowPanel.value;
    }, function () {
      panelColUpdate();
    });
    return function () {
      return createVNode("div", {
        "class": panelClassName.value
      }, [createVNode("div", {
        "class": "".concat(panelClassName.value, "-section-body")
      }, [createVNode(SinglePanel, mergeProps(props, {
        "ref": panelRef,
        "format": props.format || DEFAULT_FORMAT,
        "steps": props.steps || DEFAULT_STEPS,
        "value": dayjs(props.value, props.format).isValid() ? props.value : defaultValue.value,
        "triggerScroll": triggerScroll.value,
        "onChange": props.onChange,
        "resetTriggerScroll": resetTriggerScroll,
        "isShowPanel": props.isShowPanel
      }), null)]), isFooterDisplay.value ? createVNode("div", {
        "class": "".concat(panelClassName.value, "-section-footer")
      }, [createVNode(TButton, {
        "theme": "primary",
        "variant": "base",
        "onClick": function onClick() {
          return props.handleConfirmClick(defaultValue.value);
        },
        "size": "small"
      }, {
        "default": function _default() {
          return [globalConfig.value.confirm];
        }
      }), !showNowTimeBtn.value ? createVNode(TButton, {
        "theme": "primary",
        "variant": "text",
        "size": "small",
        "onClick": function onClick() {
          return props.onChange(dayjs().format(props.format));
        }
      }, {
        "default": function _default() {
          return [globalConfig.value.now];
        }
      }) : null]) : null]);
    };
  }
});

export { _TimePickerPanel as default };
//# sourceMappingURL=time-picker-panel.mjs.map
